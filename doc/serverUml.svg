<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2608px" preserveAspectRatio="none" style="width:7048px;height:2608px;" version="1.1" viewBox="0 0 7048 2608" width="7048px" zoomAndPan="magnify"><defs><filter height="300%" id="f1g9x9js5r1vd6" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster ECS--><polygon fill="#FFFFFF" filter="url(#f1g9x9js5r1vd6)" points="14,268,50,268,57,290.2969,5555,290.2969,5555,1679.5,14,1679.5,14,268" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="14" x2="57" y1="290.2969" y2="290.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="30" x="18" y="282.9951">ECS</text><!--cluster BinaryProtocol--><polygon fill="#FFFFFF" filter="url(#f1g9x9js5r1vd6)" points="3866,1954.5,3987,1954.5,3994,1976.7969,4604,1976.7969,4604,2139.5,3866,2139.5,3866,1954.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="3866" x2="3994" y1="1976.7969" y2="1976.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="115" x="3870" y="1969.4951">BinaryProtocol</text><!--class ECS.ASystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="112.0234" id="ECS.ASystem" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="3256.5" y="1080"/><ellipse cx="3372.25" cy="1096" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3375.2188,1101.6406 Q3374.6406,1101.9375 3374,1102.0781 Q3373.3594,1102.2344 3372.6563,1102.2344 Q3370.1563,1102.2344 3368.8281,1100.5938 Q3367.5156,1098.9375 3367.5156,1095.8125 Q3367.5156,1092.6875 3368.8281,1091.0313 Q3370.1563,1089.375 3372.6563,1089.375 Q3373.3594,1089.375 3374,1089.5313 Q3374.6563,1089.6875 3375.2188,1089.9844 L3375.2188,1092.7031 Q3374.5938,1092.125 3374,1091.8594 Q3373.4063,1091.5781 3372.7813,1091.5781 Q3371.4375,1091.5781 3370.75,1092.6563 Q3370.0625,1093.7188 3370.0625,1095.8125 Q3370.0625,1097.9063 3370.75,1098.9844 Q3371.4375,1100.0469 3372.7813,1100.0469 Q3373.4063,1100.0469 3374,1099.7813 Q3374.5938,1099.5 3375.2188,1098.9219 L3375.2188,1101.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="3392.75" y="1100.1543">ASystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3257.5" x2="3548.5" y1="1112" y2="1112"/><polygon fill="none" points="3267.5,1118.9023,3271.5,1122.9023,3267.5,1126.9023,3263.5,1122.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="3276.5" y="1126.2104">_filter : Filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3257.5" x2="3548.5" y1="1132.8047" y2="1132.8047"/><ellipse cx="3267.5" cy="1144.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="3276.5" y="1147.0151">ASystem()</text><ellipse cx="3267.5" cy="1157.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="3276.5" y="1159.8198">ASystem(const ASystem&amp; other)</text><ellipse cx="3267.5" cy="1170.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3276.5" y="1172.6245">~ASystem()</text><ellipse cx="3267.5" cy="1183.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="3276.5" y="1185.4292">operator=(const ASystem&amp; other) : ASystem&amp;</text><!--class ECS.ECSEngine--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="265.6797" id="ECS.ECSEngine" style="stroke: #A80036; stroke-width: 1.5;" width="544" x="3091" y="295"/><ellipse cx="3325.25" cy="311" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3328.2188,316.6406 Q3327.6406,316.9375 3327,317.0781 Q3326.3594,317.2344 3325.6563,317.2344 Q3323.1563,317.2344 3321.8281,315.5938 Q3320.5156,313.9375 3320.5156,310.8125 Q3320.5156,307.6875 3321.8281,306.0313 Q3323.1563,304.375 3325.6563,304.375 Q3326.3594,304.375 3327,304.5313 Q3327.6563,304.6875 3328.2188,304.9844 L3328.2188,307.7031 Q3327.5938,307.125 3327,306.8594 Q3326.4063,306.5781 3325.7813,306.5781 Q3324.4375,306.5781 3323.75,307.6563 Q3323.0625,308.7188 3323.0625,310.8125 Q3323.0625,312.9063 3323.75,313.9844 Q3324.4375,315.0469 3325.7813,315.0469 Q3326.4063,315.0469 3327,314.7813 Q3327.5938,314.5 3328.2188,313.9219 L3328.2188,316.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="3345.75" y="315.1543">ECSEngine</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3092" x2="3634" y1="327" y2="327"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3099" y="335.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3111" y="341.2104">_entityM : std::unique_ptr&lt;EntityManager&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3099" y="348.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="3111" y="354.0151">_storageM : std::unique_ptr&lt;StorageManager&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3099" y="361.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3111" y="366.8198">_systemM : std::unique_ptr&lt;SystemManager&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3092" x2="3634" y1="373.4141" y2="373.4141"/><ellipse cx="3102" cy="385.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="3111" y="387.6245">ECSEngine()</text><ellipse cx="3102" cy="398.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="3111" y="400.4292">ECSEngine(const ECSEngine&amp; other)</text><ellipse cx="3102" cy="410.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="3111" y="413.2339">~ECSEngine()</text><ellipse cx="3102" cy="423.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="3111" y="426.0386">operator=(const ECSEngine&amp; other) : ECSEngine&amp;</text><ellipse cx="3102" cy="436.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="3111" y="438.8433">getNewEntity() : Entity {query}</text><ellipse cx="3102" cy="449.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="382" x="3111" y="451.6479">getComponent(const Entity entity, const componentType type) : T&amp;</text><ellipse cx="3102" cy="462.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="3111" y="464.4526">getStorage(const componentType type) : std::shared_ptr&lt;IStorage&gt;&amp;</text><ellipse cx="3102" cy="474.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="3111" y="477.2573">getEntites() : std::vector&lt;Entity&gt;&amp;</text><ellipse cx="3102" cy="487.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="3111" y="490.062">getSystems() : std::vector&lt;std::shared_ptr&lt;ISystem&gt;&gt;&amp;</text><ellipse cx="3102" cy="500.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="3111" y="502.8667">addComponent(const Entity entity, const T&amp; component, const componentType type) : void</text><ellipse cx="3102" cy="513.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="3111" y="515.6714">registerComponent(const componentType type) : void</text><ellipse cx="3102" cy="526.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="3111" y="528.4761">registerSystem(Args&amp;&amp; ... args) : void</text><ellipse cx="3102" cy="538.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3111" y="541.2808">removeEntity(const Entity entity) : void</text><ellipse cx="3102" cy="551.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="3111" y="554.0854">update(float dt) : void</text><!--class ECS.EntityManager--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="176.0469" id="ECS.EntityManager" style="stroke: #A80036; stroke-width: 1.5;" width="353" x="2454.5" y="621"/><ellipse cx="2581.75" cy="637" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2584.7188,642.6406 Q2584.1406,642.9375 2583.5,643.0781 Q2582.8594,643.2344 2582.1563,643.2344 Q2579.6563,643.2344 2578.3281,641.5938 Q2577.0156,639.9375 2577.0156,636.8125 Q2577.0156,633.6875 2578.3281,632.0313 Q2579.6563,630.375 2582.1563,630.375 Q2582.8594,630.375 2583.5,630.5313 Q2584.1563,630.6875 2584.7188,630.9844 L2584.7188,633.7031 Q2584.0938,633.125 2583.5,632.8594 Q2582.9063,632.5781 2582.2813,632.5781 Q2580.9375,632.5781 2580.25,633.6563 Q2579.5625,634.7188 2579.5625,636.8125 Q2579.5625,638.9063 2580.25,639.9844 Q2580.9375,641.0469 2582.2813,641.0469 Q2582.9063,641.0469 2583.5,640.7813 Q2584.0938,640.5 2584.7188,639.9219 L2584.7188,642.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="2602.25" y="641.1543">EntityManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2455.5" x2="2806.5" y1="653" y2="653"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2462.5" y="661.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2474.5" y="667.2104">_entities : std::queue&lt;Entity&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2462.5" y="674.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="2474.5" y="680.0151">_ids : std::vector&lt;Entity&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2462.5" y="687.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2474.5" y="692.8198">_nbEntities : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2455.5" x2="2806.5" y1="699.4141" y2="699.4141"/><ellipse cx="2465.5" cy="711.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2474.5" y="713.6245">EntityManager()</text><ellipse cx="2465.5" cy="724.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="2474.5" y="726.4292">EntityManager(const EntityManager&amp; other)</text><ellipse cx="2465.5" cy="736.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2474.5" y="739.2339">~EntityManager()</text><ellipse cx="2465.5" cy="749.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="2474.5" y="752.0386">createEntity() : Entity</text><ellipse cx="2465.5" cy="762.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="2474.5" y="764.8433">operator=(const EntityManager&amp; other) : EntityManager&amp;</text><ellipse cx="2465.5" cy="775.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2474.5" y="777.6479">getEntities() : std::vector&lt;Entity&gt;&amp;</text><ellipse cx="2465.5" cy="788.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2474.5" y="790.4526">destroyEntity(const Entity entity) : void</text><!--class ECS.Filter--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="ECS.Filter" style="stroke: #A80036; stroke-width: 1.5;" width="790" x="22" y="1508"/><ellipse cx="397.25" cy="1524" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M400.2188,1529.6406 Q399.6406,1529.9375 399,1530.0781 Q398.3594,1530.2344 397.6563,1530.2344 Q395.1563,1530.2344 393.8281,1528.5938 Q392.5156,1526.9375 392.5156,1523.8125 Q392.5156,1520.6875 393.8281,1519.0313 Q395.1563,1517.375 397.6563,1517.375 Q398.3594,1517.375 399,1517.5313 Q399.6563,1517.6875 400.2188,1517.9844 L400.2188,1520.7031 Q399.5938,1520.125 399,1519.8594 Q398.4063,1519.5781 397.7813,1519.5781 Q396.4375,1519.5781 395.75,1520.6563 Q395.0625,1521.7188 395.0625,1523.8125 Q395.0625,1525.9063 395.75,1526.9844 Q396.4375,1528.0469 397.7813,1528.0469 Q398.4063,1528.0469 399,1527.7813 Q399.5938,1527.5 400.2188,1526.9219 L400.2188,1529.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31" x="417.75" y="1528.1543">Filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="811" y1="1540" y2="1540"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="23" x2="811" y1="1548" y2="1548"/><ellipse cx="33" cy="1559.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="36" x="42" y="1562.2104">Filter()</text><ellipse cx="33" cy="1572.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="42" y="1575.0151">Filter(const Filter&amp; other)</text><ellipse cx="33" cy="1585.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="42" y="1587.8198">~Filter()</text><ellipse cx="33" cy="1598.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="42" y="1600.6245">operator=(const Filter&amp; other) : Filter&amp;</text><ellipse cx="33" cy="1611.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="764" x="42" y="1613.4292">findComponent(const componentType&amp; type, std::unordered_map&lt;componentType, std::shared_ptr&lt;IStorage&gt;&gt;&amp; components) : T&amp;</text><ellipse cx="33" cy="1623.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="619" x="42" y="1626.2339">filterEntities(const std::shared_ptr&lt;IStorage&gt;&amp; storage, std::vector&lt;Entity&gt;&amp; entities) : std::vector&lt;Entity&gt;</text><!--class ECS.IComponents--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="60.8047" id="ECS.IComponents" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="1163" y="397.5"/><ellipse cx="1179.8" cy="413.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1182.7688,419.1406 Q1182.1906,419.4375 1181.55,419.5781 Q1180.9094,419.7344 1180.2063,419.7344 Q1177.7063,419.7344 1176.3781,418.0938 Q1175.0656,416.4375 1175.0656,413.3125 Q1175.0656,410.1875 1176.3781,408.5313 Q1177.7063,406.875 1180.2063,406.875 Q1180.9094,406.875 1181.55,407.0313 Q1182.2063,407.1875 1182.7688,407.4844 L1182.7688,410.2031 Q1182.1438,409.625 1181.55,409.3594 Q1180.9563,409.0781 1180.3313,409.0781 Q1178.9875,409.0781 1178.3,410.1563 Q1177.6125,411.2188 1177.6125,413.3125 Q1177.6125,415.4063 1178.3,416.4844 Q1178.9875,417.5469 1180.3313,417.5469 Q1180.9563,417.5469 1181.55,417.2813 Q1182.1438,417 1182.7688,416.4219 L1182.7688,419.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="1194.2" y="417.6543">IComponents</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1164" x2="1280" y1="429.5" y2="429.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1164" x2="1280" y1="437.5" y2="437.5"/><ellipse cx="1174" cy="449.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1183" y="451.7104">~IComponents()</text><!--class ECS.IStorage--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="99.2188" id="ECS.IStorage" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="2937.5" y="857"/><ellipse cx="3035.75" cy="873" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3035.8594,868.3438 L3034.7031,873.4219 L3037.0313,873.4219 L3035.8594,868.3438 Z M3034.375,866.1094 L3037.3594,866.1094 L3040.7188,878.5 L3038.2656,878.5 L3037.5,875.4375 L3034.2188,875.4375 L3033.4688,878.5 L3031.0313,878.5 L3034.375,866.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="54" x="3056.25" y="877.1543">IStorage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2938.5" x2="3195.5" y1="889" y2="889"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2938.5" x2="3195.5" y1="897" y2="897"/><ellipse cx="2948.5" cy="908.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2957.5" y="911.2104">~IStorage()</text><ellipse cx="2948.5" cy="921.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="223" x="2957.5" y="924.0151">destroyEntity(std::size_t entityID) : bool</text><ellipse cx="2948.5" cy="934.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="233" x="2957.5" y="936.8198">hasComponent(std::size_t entityID) : bool</text><ellipse cx="2948.5" cy="947.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="2957.5" y="949.6245">getType() : componentType {query}</text><!--class ECS.ISystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="73.6094" id="ECS.ISystem" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="3356" y="869.5"/><ellipse cx="3478.25" cy="885.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3478.3594,880.8438 L3477.2031,885.9219 L3479.5313,885.9219 L3478.3594,880.8438 Z M3476.875,878.6094 L3479.8594,878.6094 L3483.2188,891 L3480.7656,891 L3480,887.9375 L3476.7188,887.9375 L3475.9688,891 L3473.5313,891 L3476.875,878.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="49" x="3498.75" y="889.6543">ISystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3357" x2="3657" y1="901.5" y2="901.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3357" x2="3657" y1="909.5" y2="909.5"/><ellipse cx="3367" cy="921.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="3376" y="923.7104">~ISystem()</text><ellipse cx="3367" cy="934.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="276" x="3376" y="936.5151">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.Storage--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="240.0703" id="ECS.Storage" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="2819" y="1016"/><ellipse cx="2913.75" cy="1032" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2916.7188,1037.6406 Q2916.1406,1037.9375 2915.5,1038.0781 Q2914.8594,1038.2344 2914.1563,1038.2344 Q2911.6563,1038.2344 2910.3281,1036.5938 Q2909.0156,1034.9375 2909.0156,1031.8125 Q2909.0156,1028.6875 2910.3281,1027.0313 Q2911.6563,1025.375 2914.1563,1025.375 Q2914.8594,1025.375 2915.5,1025.5313 Q2916.1563,1025.6875 2916.7188,1025.9844 L2916.7188,1028.7031 Q2916.0938,1028.125 2915.5,1027.8594 Q2914.9063,1027.5781 2914.2813,1027.5781 Q2912.9375,1027.5781 2912.25,1028.6563 Q2911.5625,1029.7188 2911.5625,1031.8125 Q2911.5625,1033.9063 2912.25,1034.9844 Q2912.9375,1036.0469 2914.2813,1036.0469 Q2914.9063,1036.0469 2915.5,1035.7813 Q2916.0938,1035.5 2916.7188,1034.9219 L2916.7188,1037.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="2934.25" y="1036.1543">Storage</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="3072" y="1013"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="3073" y="1025.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2820" x2="3220" y1="1048" y2="1048"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1056.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2839" y="1062.2104">_type : componentType</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1069.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2839" y="1075.0151">_size : size_t</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1082.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="2839" y="1087.8198">_componentArray : std::array&lt;T, 5000&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1095.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2839" y="1100.6245">_entityToIndex : std::unordered_map&lt;Entity, size_t&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1108.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="2839" y="1113.4292">_indexToEntity : std::unordered_map&lt;size_t, Entity&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2820" x2="3220" y1="1120.0234" y2="1120.0234"/><ellipse cx="2830" cy="1131.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2839" y="1134.2339">Storage(const componentType&amp; type)</text><ellipse cx="2830" cy="1144.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2839" y="1147.0386">Storage(const Storage&amp; other)</text><ellipse cx="2830" cy="1157.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2839" y="1159.8433">~Storage()</text><ellipse cx="2830" cy="1170.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="2839" y="1172.6479">operator=(const Storage&amp; other) : Storage&amp;</text><ellipse cx="2830" cy="1183.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2839" y="1185.4526">getComponent(Entity entityID) : T&amp;</text><ellipse cx="2830" cy="1195.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2839" y="1198.2573">destroyEntity(Entity entityID) : bool</text><ellipse cx="2830" cy="1208.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="2839" y="1211.062">hasComponent(Entity entityID) : bool</text><ellipse cx="2830" cy="1221.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="2839" y="1223.8667">getType() : componentType {query}</text><ellipse cx="2830" cy="1234.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2839" y="1236.6714">linkEntityToComponent(Entity entityID, const T&amp; component) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2827" y="1244.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2839" y="1249.4761">removeEntity(size_t entityID) : void</text><!--class ECS.StorageManager--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="176.0469" id="ECS.StorageManager" style="stroke: #A80036; stroke-width: 1.5;" width="544" x="2843" y="621"/><ellipse cx="3058.25" cy="637" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3061.2188,642.6406 Q3060.6406,642.9375 3060,643.0781 Q3059.3594,643.2344 3058.6563,643.2344 Q3056.1563,643.2344 3054.8281,641.5938 Q3053.5156,639.9375 3053.5156,636.8125 Q3053.5156,633.6875 3054.8281,632.0313 Q3056.1563,630.375 3058.6563,630.375 Q3059.3594,630.375 3060,630.5313 Q3060.6563,630.6875 3061.2188,630.9844 L3061.2188,633.7031 Q3060.5938,633.125 3060,632.8594 Q3059.4063,632.5781 3058.7813,632.5781 Q3057.4375,632.5781 3056.75,633.6563 Q3056.0625,634.7188 3056.0625,636.8125 Q3056.0625,638.9063 3056.75,639.9844 Q3057.4375,641.0469 3058.7813,641.0469 Q3059.4063,641.0469 3060,640.7813 Q3060.5938,640.5 3061.2188,639.9219 L3061.2188,642.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="105" x="3078.75" y="641.1543">StorageManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2844" x2="3386" y1="653" y2="653"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2851" y="661.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="2863" y="667.2104">_storages : std::unordered_map&lt;componentType, std::shared_ptr&lt;IStorage&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2844" x2="3386" y1="673.8047" y2="673.8047"/><ellipse cx="2854" cy="685.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2863" y="688.0151">StorageManager()</text><ellipse cx="2854" cy="698.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="2863" y="700.8198">StorageManager(const StorageManager&amp; other)</text><ellipse cx="2854" cy="711.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="2863" y="713.6245">~StorageManager()</text><ellipse cx="2854" cy="724.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="2863" y="726.4292">operator=(const StorageManager&amp; other) : StorageManager&amp;</text><ellipse cx="2854" cy="736.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="2863" y="739.2339">findStorage(const componentType&amp; type) : T&amp;</text><ellipse cx="2854" cy="749.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="2863" y="752.0386">getStorage(const componentType type) : std::shared_ptr&lt;IStorage&gt;&amp;</text><ellipse cx="2854" cy="762.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="490" x="2863" y="764.8433">getStorages() : std::unordered_map&lt;componentType , std::shared_ptr&lt;IStorage&gt;&gt;&amp;</text><ellipse cx="2854" cy="775.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="518" x="2863" y="777.6479">addComponent(const Entity entity, const T&amp; component, const componentType type) : void</text><ellipse cx="2854" cy="788.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="2863" y="790.4526">registerStorage(const componentType type) : void</text><!--class ECS.SystemManager--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.SystemManager" style="stroke: #A80036; stroke-width: 1.5;" width="377" x="3422.5" y="640"/><ellipse cx="3556.75" cy="656" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3559.7188,661.6406 Q3559.1406,661.9375 3558.5,662.0781 Q3557.8594,662.2344 3557.1563,662.2344 Q3554.6563,662.2344 3553.3281,660.5938 Q3552.0156,658.9375 3552.0156,655.8125 Q3552.0156,652.6875 3553.3281,651.0313 Q3554.6563,649.375 3557.1563,649.375 Q3557.8594,649.375 3558.5,649.5313 Q3559.1563,649.6875 3559.7188,649.9844 L3559.7188,652.7031 Q3559.0938,652.125 3558.5,651.8594 Q3557.9063,651.5781 3557.2813,651.5781 Q3555.9375,651.5781 3555.25,652.6563 Q3554.5625,653.7188 3554.5625,655.8125 Q3554.5625,657.9063 3555.25,658.9844 Q3555.9375,660.0469 3557.2813,660.0469 Q3557.9063,660.0469 3558.5,659.7813 Q3559.0938,659.5 3559.7188,658.9219 L3559.7188,661.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="3577.25" y="660.1543">SystemManager</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3423.5" x2="3798.5" y1="672" y2="672"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3430.5" y="680.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="3442.5" y="686.2104">_systems : std::vector&lt;std::shared_ptr&lt;ISystem&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3423.5" x2="3798.5" y1="692.8047" y2="692.8047"/><ellipse cx="3433.5" cy="704.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="3442.5" y="707.0151">SystemManager()</text><ellipse cx="3433.5" cy="717.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="3442.5" y="719.8198">SystemManager(const SystemManager&amp; other)</text><ellipse cx="3433.5" cy="730.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="3442.5" y="732.6245">~SystemManager()</text><ellipse cx="3433.5" cy="743.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="3442.5" y="745.4292">operator=(const SystemManager&amp; other) : SystemManager&amp;</text><ellipse cx="3433.5" cy="755.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="3442.5" y="758.2339">getSystems() : std::vector&lt;std::shared_ptr&lt;ISystem&gt;&gt;&amp;</text><ellipse cx="3433.5" cy="768.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="3442.5" y="771.0386">addSystem(const std::shared_ptr&lt;ISystem&gt;&amp; system) : void</text><!--class ECS.bombSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.bombSystem" style="stroke: #A80036; stroke-width: 1.5;" width="625" x="847.5" y="1501.5"/><ellipse cx="1115.75" cy="1517.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1118.7188,1523.1406 Q1118.1406,1523.4375 1117.5,1523.5781 Q1116.8594,1523.7344 1116.1563,1523.7344 Q1113.6563,1523.7344 1112.3281,1522.0938 Q1111.0156,1520.4375 1111.0156,1517.3125 Q1111.0156,1514.1875 1112.3281,1512.5313 Q1113.6563,1510.875 1116.1563,1510.875 Q1116.8594,1510.875 1117.5,1511.0313 Q1118.1563,1511.1875 1118.7188,1511.4844 L1118.7188,1514.2031 Q1118.0938,1513.625 1117.5,1513.3594 Q1116.9063,1513.0781 1116.2813,1513.0781 Q1114.9375,1513.0781 1114.25,1514.1563 Q1113.5625,1515.2188 1113.5625,1517.3125 Q1113.5625,1519.4063 1114.25,1520.4844 Q1114.9375,1521.5469 1116.2813,1521.5469 Q1116.9063,1521.5469 1117.5,1521.2813 Q1118.0938,1521 1118.7188,1520.4219 L1118.7188,1523.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="1136.25" y="1521.6543">bombSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="848.5" x2="1471.5" y1="1533.5" y2="1533.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="848.5" x2="1471.5" y1="1541.5" y2="1541.5"/><ellipse cx="858.5" cy="1553.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="867.5" y="1555.7104">bombSystem()</text><ellipse cx="858.5" cy="1566.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="867.5" y="1568.5151">bombSystem(const bombSystem&amp; other)</text><ellipse cx="858.5" cy="1579.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="867.5" y="1581.3198">~bombSystem()</text><ellipse cx="858.5" cy="1591.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="867.5" y="1594.1245">operator=(const bombSystem&amp; other) : bombSystem&amp;</text><ellipse cx="858.5" cy="1604.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="867.5" y="1606.9292">update(const float dt, ECSEngine&amp; engine) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="855.5" y="1614.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="599" x="867.5" y="1619.7339">updateBomb(const float dt, const Entity ent, ECS::ECSEngine&amp; engine, ECS::entityDetails&amp; details) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="855.5" y="1627.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="599" x="867.5" y="1632.5386">updateShoot(const float dt, const Entity ent, ECS::ECSEngine&amp; engine, ECS::entityDetails&amp; details) : void</text><!--class ECS.collisionSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="201.6563" id="ECS.collisionSystem" style="stroke: #A80036; stroke-width: 1.5;" width="804" x="1508" y="1469.5"/><ellipse cx="1858.25" cy="1485.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1861.2188,1491.1406 Q1860.6406,1491.4375 1860,1491.5781 Q1859.3594,1491.7344 1858.6563,1491.7344 Q1856.1563,1491.7344 1854.8281,1490.0938 Q1853.5156,1488.4375 1853.5156,1485.3125 Q1853.5156,1482.1875 1854.8281,1480.5313 Q1856.1563,1478.875 1858.6563,1478.875 Q1859.3594,1478.875 1860,1479.0313 Q1860.6563,1479.1875 1861.2188,1479.4844 L1861.2188,1482.2031 Q1860.5938,1481.625 1860,1481.3594 Q1859.4063,1481.0781 1858.7813,1481.0781 Q1857.4375,1481.0781 1856.75,1482.1563 Q1856.0625,1483.2188 1856.0625,1485.3125 Q1856.0625,1487.4063 1856.75,1488.4844 Q1857.4375,1489.5469 1858.7813,1489.5469 Q1859.4063,1489.5469 1860,1489.2813 Q1860.5938,1489 1861.2188,1488.4219 L1861.2188,1491.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="95" x="1878.75" y="1489.6543">collisionSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1509" x2="2311" y1="1501.5" y2="1501.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1509" x2="2311" y1="1509.5" y2="1509.5"/><ellipse cx="1519" cy="1521.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1528" y="1523.7104">collisionSystem()</text><ellipse cx="1519" cy="1534.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="1528" y="1536.5151">collisionSystem(const collisionSystem&amp; other)</text><ellipse cx="1519" cy="1547.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1528" y="1549.3198">~collisionSystem()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1556.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="657" x="1528" y="1562.1245">findIntersection(Position playerPos, Position playerMaxpos, Position entPos, Position entMaxPos) : Position {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1569.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1528" y="1574.9292">isExplodable(const entityType type) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1582.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="461" x="1528" y="1587.7339">isPossibleCollision(const entityType type, std::vector&lt;entityType&gt;&amp; types) : bool</text><ellipse cx="1519" cy="1598.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="1528" y="1600.5386">operator=(const collisionSystem&amp; other) : collisionSystem&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1608.0352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="778" x="1528" y="1613.3433">checkCollision(const Entity ent, std::vector&lt;Entity&gt;&amp; entities, ECS::ECSEngine&amp; engine, std::vector&lt;entityType&gt;&amp; CollisionTypes) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1620.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="1528" y="1626.1479">createBomb(Position pos, ECS::ECSEngine&amp; engine) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1633.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="1528" y="1638.9526">destroyEntity(const Entity ent, const Entity obstacle, ECS::ECSEngine&amp; engine) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1516" y="1646.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="1528" y="1651.7573">looseHp(const Entity ent, const Entity obstacle, ECS::ECSEngine&amp; engine) : void</text><ellipse cx="1519" cy="1662.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1528" y="1664.562">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.eventSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="163.2422" id="ECS.eventSystem" style="stroke: #A80036; stroke-width: 1.5;" width="712" x="4482" y="1489"/><ellipse cx="4793.75" cy="1505" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4796.7188,1510.6406 Q4796.1406,1510.9375 4795.5,1511.0781 Q4794.8594,1511.2344 4794.1563,1511.2344 Q4791.6563,1511.2344 4790.3281,1509.5938 Q4789.0156,1507.9375 4789.0156,1504.8125 Q4789.0156,1501.6875 4790.3281,1500.0313 Q4791.6563,1498.375 4794.1563,1498.375 Q4794.8594,1498.375 4795.5,1498.5313 Q4796.1563,1498.6875 4796.7188,1498.9844 L4796.7188,1501.7031 Q4796.0938,1501.125 4795.5,1500.8594 Q4794.9063,1500.5781 4794.2813,1500.5781 Q4792.9375,1500.5781 4792.25,1501.6563 Q4791.5625,1502.7188 4791.5625,1504.8125 Q4791.5625,1506.9063 4792.25,1507.9844 Q4792.9375,1509.0469 4794.2813,1509.0469 Q4794.9063,1509.0469 4795.5,1508.7813 Q4796.0938,1508.5 4796.7188,1507.9219 L4796.7188,1510.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="4814.25" y="1509.1543">eventSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4483" x2="5193" y1="1521" y2="1521"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4490" y="1529.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="4502" y="1535.2104">_moves : std::map&lt;std::string, ECS::currentMovement&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4490" y="1542.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4502" y="1548.0151">_buffer : std::shared_ptr&lt;Buffer&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4483" x2="5193" y1="1554.6094" y2="1554.6094"/><ellipse cx="4493" cy="1566.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="4502" y="1568.8198">eventSystem(const std::shared_ptr&lt;Buffer&gt;&amp; buffer)</text><ellipse cx="4493" cy="1579.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="4502" y="1581.6245">eventSystem(const eventSystem&amp; other)</text><ellipse cx="4493" cy="1592.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4502" y="1594.4292">~eventSystem()</text><ellipse cx="4493" cy="1604.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="315" x="4502" y="1607.2339">operator=(const eventSystem&amp; other) : eventSystem&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4490" y="1614.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="4502" y="1620.0386">createShoot(ECS::ECSEngine&amp; engine, const Entity entity) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4490" y="1627.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="686" x="4502" y="1632.8433">handleEvent(std::vector&lt;std::string&gt;&amp; events, ECS::ECSEngine&amp; engine, const Entity entity, ECS::Player&amp; player) : void</text><ellipse cx="4493" cy="1643.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="4502" y="1645.6479">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.monsterSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="ECS.monsterSystem" style="stroke: #A80036; stroke-width: 1.5;" width="375" x="2347.5" y="1495.5"/><ellipse cx="2482.25" cy="1511.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2485.2188,1517.1406 Q2484.6406,1517.4375 2484,1517.5781 Q2483.3594,1517.7344 2482.6563,1517.7344 Q2480.1563,1517.7344 2478.8281,1516.0938 Q2477.5156,1514.4375 2477.5156,1511.3125 Q2477.5156,1508.1875 2478.8281,1506.5313 Q2480.1563,1504.875 2482.6563,1504.875 Q2483.3594,1504.875 2484,1505.0313 Q2484.6563,1505.1875 2485.2188,1505.4844 L2485.2188,1508.2031 Q2484.5938,1507.625 2484,1507.3594 Q2483.4063,1507.0781 2482.7813,1507.0781 Q2481.4375,1507.0781 2480.75,1508.1563 Q2480.0625,1509.2188 2480.0625,1511.3125 Q2480.0625,1513.4063 2480.75,1514.4844 Q2481.4375,1515.5469 2482.7813,1515.5469 Q2483.4063,1515.5469 2484,1515.2813 Q2484.5938,1515 2485.2188,1514.4219 L2485.2188,1517.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="2502.75" y="1515.6543">monsterSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2348.5" x2="2721.5" y1="1527.5" y2="1527.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2355.5" y="1536.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2367.5" y="1541.7104">_loaders : std::vector&lt;std::unique_ptr&lt;DLLoader&gt;&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2355.5" y="1549.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="2367.5" y="1554.5151">_monsters : std::vector&lt;std::unique_ptr&lt;IMonster&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2348.5" x2="2721.5" y1="1561.1094" y2="1561.1094"/><ellipse cx="2358.5" cy="1573.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="2367.5" y="1575.3198">monsterSystem(const std::string&amp; libPath)</text><ellipse cx="2358.5" cy="1585.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="2367.5" y="1588.1245">monsterSystem(const monsterSystem&amp; other)</text><ellipse cx="2358.5" cy="1598.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="2367.5" y="1600.9292">~monsterSystem()</text><ellipse cx="2358.5" cy="1611.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="2367.5" y="1613.7339">operator=(const monsterSystem&amp; other) : monsterSystem&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2355.5" y="1621.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="2367.5" y="1626.5386">selectRandomMonster() : std::unique_ptr&lt;DLLoader&gt;&amp;</text><ellipse cx="2358.5" cy="1637.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2367.5" y="1639.3433">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.movementSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="ECS.movementSystem" style="stroke: #A80036; stroke-width: 1.5;" width="553" x="3893.5" y="1495.5"/><ellipse cx="4110.75" cy="1511.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4113.7188,1517.1406 Q4113.1406,1517.4375 4112.5,1517.5781 Q4111.8594,1517.7344 4111.1563,1517.7344 Q4108.6563,1517.7344 4107.3281,1516.0938 Q4106.0156,1514.4375 4106.0156,1511.3125 Q4106.0156,1508.1875 4107.3281,1506.5313 Q4108.6563,1504.875 4111.1563,1504.875 Q4111.8594,1504.875 4112.5,1505.0313 Q4113.1563,1505.1875 4113.7188,1505.4844 L4113.7188,1508.2031 Q4113.0938,1507.625 4112.5,1507.3594 Q4111.9063,1507.0781 4111.2813,1507.0781 Q4109.9375,1507.0781 4109.25,1508.1563 Q4108.5625,1509.2188 4108.5625,1511.3125 Q4108.5625,1513.4063 4109.25,1514.4844 Q4109.9375,1515.5469 4111.2813,1515.5469 Q4111.9063,1515.5469 4112.5,1515.2813 Q4113.0938,1515 4113.7188,1514.4219 L4113.7188,1517.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="4131.25" y="1515.6543">movementSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3894.5" x2="4445.5" y1="1527.5" y2="1527.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3894.5" x2="4445.5" y1="1535.5" y2="1535.5"/><ellipse cx="3904.5" cy="1547.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3913.5" y="1549.7104">movementSystem()</text><ellipse cx="3904.5" cy="1560.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="3913.5" y="1562.5151">movementSystem(const movementSystem&amp; other)</text><ellipse cx="3904.5" cy="1573.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="3913.5" y="1575.3198">~movementSystem()</text><ellipse cx="3904.5" cy="1585.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="3913.5" y="1588.1245">operator=(const movementSystem&amp; other) : movementSystem&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3901.5" y="1595.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="3913.5" y="1600.9292">applyPhysic(Position&amp; pos, const Velocity&amp; vel, const float dt) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3901.5" y="1608.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="3913.5" y="1613.7339">applyPhysic(Position&amp; pos, const Velocity&amp; vel, entityDetails&amp; details, Player&amp; player) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3901.5" y="1621.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="506" x="3913.5" y="1626.5386">manageAnimation(ECS::entityDetails&amp; details, const ECS::currentMovement move) : void</text><ellipse cx="3904.5" cy="1637.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="3913.5" y="1639.3433">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.routineSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="188.8516" id="ECS.routineSystem" style="stroke: #A80036; stroke-width: 1.5;" width="1101" x="2757.5" y="1476"/><ellipse cx="3258.75" cy="1492" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3261.7188,1497.6406 Q3261.1406,1497.9375 3260.5,1498.0781 Q3259.8594,1498.2344 3259.1563,1498.2344 Q3256.6563,1498.2344 3255.3281,1496.5938 Q3254.0156,1494.9375 3254.0156,1491.8125 Q3254.0156,1488.6875 3255.3281,1487.0313 Q3256.6563,1485.375 3259.1563,1485.375 Q3259.8594,1485.375 3260.5,1485.5313 Q3261.1563,1485.6875 3261.7188,1485.9844 L3261.7188,1488.7031 Q3261.0938,1488.125 3260.5,1487.8594 Q3259.9063,1487.5781 3259.2813,1487.5781 Q3257.9375,1487.5781 3257.25,1488.6563 Q3256.5625,1489.7188 3256.5625,1491.8125 Q3256.5625,1493.9063 3257.25,1494.9844 Q3257.9375,1496.0469 3259.2813,1496.0469 Q3259.9063,1496.0469 3260.5,1495.7813 Q3261.0938,1495.5 3261.7188,1494.9219 L3261.7188,1497.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="3279.25" y="1496.1543">routineSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2758.5" x2="3857.5" y1="1508" y2="1508"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1516.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="2777.5" y="1522.2104">_binCodec : BinaryProtocol::Codec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1529.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="2777.5" y="1535.0151">_socket : std::shared_ptr&lt;boost::asio::ip::udp::socket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1542.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="2777.5" y="1547.8198">_clients : std::vector&lt;std::shared_ptr&lt;Client&gt;&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1555.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="2777.5" y="1560.6245">_players : std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2758.5" x2="3857.5" y1="1567.2188" y2="1567.2188"/><ellipse cx="2768.5" cy="1579.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1075" x="2777.5" y="1581.4292">routineSystem(const std::shared_ptr&lt;boost::asio::ip::udp::socket&gt;&amp; socket, std::vector&lt;std::shared_ptr&lt;Client&gt;&gt;&amp; clients, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt;&amp; players)</text><ellipse cx="2768.5" cy="1591.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2777.5" y="1594.2339">routineSystem(const routineSystem&amp; other)</text><ellipse cx="2768.5" cy="1604.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2777.5" y="1607.0386">~routineSystem()</text><ellipse cx="2768.5" cy="1617.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="2777.5" y="1619.8433">operator=(const routineSystem&amp; other) : routineSystem&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1627.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="678" x="2777.5" y="1632.6479">handleSend(const std::string&amp; message, const boost::system::error_code&amp; error, std::size_t bytesTransferred) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2765.5" y="1640.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="670" x="2777.5" y="1645.4526">sendUpdates(const Entity ent, const entityDetails&amp; details, const Position&amp; position, ECS::ECSEngine&amp; engine) : void</text><ellipse cx="2768.5" cy="1655.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="2777.5" y="1658.2573">update(const float dt, ECSEngine&amp; engine) : void</text><!--class ECS.winSystem--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="ECS.winSystem" style="stroke: #A80036; stroke-width: 1.5;" width="317" x="5229.5" y="1508"/><ellipse cx="5351.25" cy="1524" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5354.2188,1529.6406 Q5353.6406,1529.9375 5353,1530.0781 Q5352.3594,1530.2344 5351.6563,1530.2344 Q5349.1563,1530.2344 5347.8281,1528.5938 Q5346.5156,1526.9375 5346.5156,1523.8125 Q5346.5156,1520.6875 5347.8281,1519.0313 Q5349.1563,1517.375 5351.6563,1517.375 Q5352.3594,1517.375 5353,1517.5313 Q5353.6563,1517.6875 5354.2188,1517.9844 L5354.2188,1520.7031 Q5353.5938,1520.125 5353,1519.8594 Q5352.4063,1519.5781 5351.7813,1519.5781 Q5350.4375,1519.5781 5349.75,1520.6563 Q5349.0625,1521.7188 5349.0625,1523.8125 Q5349.0625,1525.9063 5349.75,1526.9844 Q5350.4375,1528.0469 5351.7813,1528.0469 Q5352.4063,1528.0469 5353,1527.7813 Q5353.5938,1527.5 5354.2188,1526.9219 L5354.2188,1529.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5371.75" y="1528.1543">winSystem</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5230.5" x2="5545.5" y1="1540" y2="1540"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5237.5" y="1548.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="5249.5" y="1554.2104">_end : std::shared_ptr&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5230.5" x2="5545.5" y1="1560.8047" y2="1560.8047"/><ellipse cx="5240.5" cy="1572.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="5249.5" y="1575.0151">winSystem(const std::shared_ptr&lt;bool&gt;&amp; end)</text><ellipse cx="5240.5" cy="1585.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="5249.5" y="1587.8198">winSystem(const winSystem&amp; other)</text><ellipse cx="5240.5" cy="1598.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="5249.5" y="1600.6245">~winSystem()</text><ellipse cx="5240.5" cy="1611.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="5249.5" y="1613.4292">update(const float dt, ECSEngine&amp; engine) : void</text><ellipse cx="5240.5" cy="1623.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="5249.5" y="1626.2339">operator=(const winSystem&amp; other) : winSystem&amp;</text><!--class ECS.componentType--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.componentType" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="4533" y="359"/><ellipse cx="4548" cy="375" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4552.1094,381 L4544.3906,381 L4544.3906,368.6094 L4552.1094,368.6094 L4552.1094,370.7656 L4546.8438,370.7656 L4546.8438,373.4375 L4551.6094,373.4375 L4551.6094,375.5938 L4546.8438,375.5938 L4546.8438,378.8438 L4552.1094,378.8438 L4552.1094,381 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="4562" y="379.1543">componentType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534" x2="4664" y1="391" y2="391"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="4539" y="405.2104">BOMB</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4539" y="418.0151">DIMENSIONS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="4539" y="430.8198">ENTITY_DETAILS</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="22" x="4539" y="443.6245">LIFE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="4539" y="456.4292">PLAYER</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="4539" y="469.2339">POSITION</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="4539" y="482.0386">VELOCITY</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4534" x2="4664" y1="488.6328" y2="488.6328"/><!--class ECS.currentMovement--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="112.0234" id="ECS.currentMovement" style="stroke: #A80036; stroke-width: 1.5;" width="142" x="4700" y="372"/><ellipse cx="4715" cy="388" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4719.1094,394 L4711.3906,394 L4711.3906,381.6094 L4719.1094,381.6094 L4719.1094,383.7656 L4713.8438,383.7656 L4713.8438,386.4375 L4718.6094,386.4375 L4718.6094,388.5938 L4713.8438,388.5938 L4713.8438,391.8438 L4719.1094,391.8438 L4719.1094,394 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="110" x="4729" y="392.1543">currentMovement</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4701" x2="4841" y1="404" y2="404"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="4706" y="418.2104">DOWN</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="4706" y="431.0151">LEFT</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="4706" y="443.8198">NONE</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="4706" y="456.6245">RIGHT</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="15" x="4706" y="469.4292">UP</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4701" x2="4841" y1="476.0234" y2="476.0234"/><!--class ECS.playerNumber--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="112.0234" id="ECS.playerNumber" style="stroke: #A80036; stroke-width: 1.5;" width="119" x="4539.5" y="653"/><ellipse cx="4554.5" cy="669" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4558.6094,675 L4550.8906,675 L4550.8906,662.6094 L4558.6094,662.6094 L4558.6094,664.7656 L4553.3438,664.7656 L4553.3438,667.4375 L4558.1094,667.4375 L4558.1094,669.5938 L4553.3438,669.5938 L4553.3438,672.8438 L4558.6094,672.8438 L4558.6094,675 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="4568.5" y="673.1543">playerNumber</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4540.5" x2="4657.5" y1="685" y2="685"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="14" x="4545.5" y="699.2104">P1</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="14" x="4545.5" y="712.0151">P2</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="14" x="4545.5" y="724.8198">P3</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="14" x="4545.5" y="737.6245">P4</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="4545.5" y="750.4292">SPEC</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4540.5" x2="4657.5" y1="757.0234" y2="757.0234"/><!--class ECS.Bomb--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="112.0234" id="ECS.Bomb" style="stroke: #A80036; stroke-width: 1.5;" width="259" x="758.5" y="653"/><ellipse cx="866.25" cy="669" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M869.2188,674.6406 Q868.6406,674.9375 868,675.0781 Q867.3594,675.2344 866.6563,675.2344 Q864.1563,675.2344 862.8281,673.5938 Q861.5156,671.9375 861.5156,668.8125 Q861.5156,665.6875 862.8281,664.0313 Q864.1563,662.375 866.6563,662.375 Q867.3594,662.375 868,662.5313 Q868.6563,662.6875 869.2188,662.9844 L869.2188,665.7031 Q868.5938,665.125 868,664.8594 Q867.4063,664.5781 866.7813,664.5781 Q865.4375,664.5781 864.75,665.6563 Q864.0625,666.7188 864.0625,668.8125 Q864.0625,670.9063 864.75,671.9844 Q865.4375,673.0469 866.7813,673.0469 Q867.4063,673.0469 868,672.7813 Q868.5938,672.5 869.2188,671.9219 L869.2188,674.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="886.75" y="673.1543">Bomb</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="759.5" x2="1016.5" y1="685" y2="685"/><ellipse cx="769.5" cy="696.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="778.5" y="699.2104">_dt : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="759.5" x2="1016.5" y1="705.8047" y2="705.8047"/><ellipse cx="769.5" cy="717.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="778.5" y="720.0151">Bomb()</text><ellipse cx="769.5" cy="730.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="778.5" y="732.8198">Bomb(const Bomb&amp; other)</text><ellipse cx="769.5" cy="743.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="778.5" y="745.6245">~Bomb()</text><ellipse cx="769.5" cy="756.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="778.5" y="758.4292">operator=(const Bomb&amp; other) : Bomb&amp;</text><!--class ECS.Dimensions--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.Dimensions" style="stroke: #A80036; stroke-width: 1.5;" width="339" x="1052.5" y="640"/><ellipse cx="1181.75" cy="656" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1184.7188,661.6406 Q1184.1406,661.9375 1183.5,662.0781 Q1182.8594,662.2344 1182.1563,662.2344 Q1179.6563,662.2344 1178.3281,660.5938 Q1177.0156,658.9375 1177.0156,655.8125 Q1177.0156,652.6875 1178.3281,651.0313 Q1179.6563,649.375 1182.1563,649.375 Q1182.8594,649.375 1183.5,649.5313 Q1184.1563,649.6875 1184.7188,649.9844 L1184.7188,652.7031 Q1184.0938,652.125 1183.5,651.8594 Q1182.9063,651.5781 1182.2813,651.5781 Q1180.9375,651.5781 1180.25,652.6563 Q1179.5625,653.7188 1179.5625,655.8125 Q1179.5625,657.9063 1180.25,658.9844 Q1180.9375,660.0469 1182.2813,660.0469 Q1182.9063,660.0469 1183.5,659.7813 Q1184.0938,659.5 1184.7188,658.9219 L1184.7188,661.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1202.25" y="660.1543">Dimensions</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1053.5" x2="1390.5" y1="672" y2="672"/><ellipse cx="1063.5" cy="683.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1072.5" y="686.2104">_x : unsigned int</text><ellipse cx="1063.5" cy="696.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1072.5" y="699.0151">_y : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1053.5" x2="1390.5" y1="705.6094" y2="705.6094"/><ellipse cx="1063.5" cy="717.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1072.5" y="719.8198">Dimensions()</text><ellipse cx="1063.5" cy="730.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="1072.5" y="732.6245">Dimensions(const unsigned int x, const unsigned int y)</text><ellipse cx="1063.5" cy="743.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1072.5" y="745.4292">Dimensions(const Dimensions&amp; other)</text><ellipse cx="1063.5" cy="755.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1072.5" y="758.2339">~Dimensions()</text><ellipse cx="1063.5" cy="768.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1072.5" y="771.0386">operator=(const Dimensions&amp; other) : Dimensions&amp;</text><!--class ECS.Life--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="ECS.Life" style="stroke: #A80036; stroke-width: 1.5;" width="233" x="1426.5" y="646.5"/><ellipse cx="1528.25" cy="662.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1531.2188,668.1406 Q1530.6406,668.4375 1530,668.5781 Q1529.3594,668.7344 1528.6563,668.7344 Q1526.1563,668.7344 1524.8281,667.0938 Q1523.5156,665.4375 1523.5156,662.3125 Q1523.5156,659.1875 1524.8281,657.5313 Q1526.1563,655.875 1528.6563,655.875 Q1529.3594,655.875 1530,656.0313 Q1530.6563,656.1875 1531.2188,656.4844 L1531.2188,659.2031 Q1530.5938,658.625 1530,658.3594 Q1529.4063,658.0781 1528.7813,658.0781 Q1527.4375,658.0781 1526.75,659.1563 Q1526.0625,660.2188 1526.0625,662.3125 Q1526.0625,664.4063 1526.75,665.4844 Q1527.4375,666.5469 1528.7813,666.5469 Q1529.4063,666.5469 1530,666.2813 Q1530.5938,666 1531.2188,665.4219 L1531.2188,668.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="1548.75" y="666.6543">Life</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1427.5" x2="1658.5" y1="678.5" y2="678.5"/><ellipse cx="1437.5" cy="690.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1446.5" y="692.7104">_hp : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1427.5" x2="1658.5" y1="699.3047" y2="699.3047"/><ellipse cx="1437.5" cy="711.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28" x="1446.5" y="713.5151">Life()</text><ellipse cx="1437.5" cy="724.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="1446.5" y="726.3198">Life(const unsigned int hp)</text><ellipse cx="1437.5" cy="736.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1446.5" y="739.1245">Life(const Life&amp; other)</text><ellipse cx="1437.5" cy="749.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="1446.5" y="751.9292">~Life()</text><ellipse cx="1437.5" cy="762.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1446.5" y="764.7339">operator=(const Life&amp; other) : Life&amp;</text><!--class ECS.Player--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="ECS.Player" style="stroke: #A80036; stroke-width: 1.5;" width="407" x="1694.5" y="634"/><ellipse cx="1874.75" cy="650" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1877.7188,655.6406 Q1877.1406,655.9375 1876.5,656.0781 Q1875.8594,656.2344 1875.1563,656.2344 Q1872.6563,656.2344 1871.3281,654.5938 Q1870.0156,652.9375 1870.0156,649.8125 Q1870.0156,646.6875 1871.3281,645.0313 Q1872.6563,643.375 1875.1563,643.375 Q1875.8594,643.375 1876.5,643.5313 Q1877.1563,643.6875 1877.7188,643.9844 L1877.7188,646.7031 Q1877.0938,646.125 1876.5,645.8594 Q1875.9063,645.5781 1875.2813,645.5781 Q1873.9375,645.5781 1873.25,646.6563 Q1872.5625,647.7188 1872.5625,649.8125 Q1872.5625,651.9063 1873.25,652.9844 Q1873.9375,654.0469 1875.2813,654.0469 Q1875.9063,654.0469 1876.5,653.7813 Q1877.0938,653.5 1877.7188,652.9219 L1877.7188,655.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="1895.25" y="654.1543">Player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1695.5" x2="2100.5" y1="666" y2="666"/><ellipse cx="1705.5" cy="677.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1714.5" y="680.2104">_uuid : boost::uuids::uuid</text><ellipse cx="1705.5" cy="690.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1714.5" y="693.0151">_direction : currentMovement</text><ellipse cx="1705.5" cy="703.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1714.5" y="705.8198">_player : playerNumber</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1695.5" x2="2100.5" y1="712.4141" y2="712.4141"/><ellipse cx="1705.5" cy="724.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="1714.5" y="726.6245">Player()</text><ellipse cx="1705.5" cy="737.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="1714.5" y="739.4292">Player(const playerNumber player, const boost::uuids::uuid&amp; uuid)</text><ellipse cx="1705.5" cy="749.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="1714.5" y="752.2339">Player(const Player&amp; other)</text><ellipse cx="1705.5" cy="762.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="1714.5" y="765.0386">~Player()</text><ellipse cx="1705.5" cy="775.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1714.5" y="777.8433">operator=(const Player&amp; other) : Player&amp;</text><!--class ECS.Position--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.Position" style="stroke: #A80036; stroke-width: 1.5;" width="283" x="2136.5" y="640"/><ellipse cx="2248.75" cy="656" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2251.7188,661.6406 Q2251.1406,661.9375 2250.5,662.0781 Q2249.8594,662.2344 2249.1563,662.2344 Q2246.6563,662.2344 2245.3281,660.5938 Q2244.0156,658.9375 2244.0156,655.8125 Q2244.0156,652.6875 2245.3281,651.0313 Q2246.6563,649.375 2249.1563,649.375 Q2249.8594,649.375 2250.5,649.5313 Q2251.1563,649.6875 2251.7188,649.9844 L2251.7188,652.7031 Q2251.0938,652.125 2250.5,651.8594 Q2249.9063,651.5781 2249.2813,651.5781 Q2247.9375,651.5781 2247.25,652.6563 Q2246.5625,653.7188 2246.5625,655.8125 Q2246.5625,657.9063 2247.25,658.9844 Q2247.9375,660.0469 2249.2813,660.0469 Q2249.9063,660.0469 2250.5,659.7813 Q2251.0938,659.5 2251.7188,658.9219 L2251.7188,661.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="2269.25" y="660.1543">Position</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2137.5" x2="2418.5" y1="672" y2="672"/><ellipse cx="2147.5" cy="683.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="2156.5" y="686.2104">_x : int</text><ellipse cx="2147.5" cy="696.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="2156.5" y="699.0151">_y : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2137.5" x2="2418.5" y1="705.6094" y2="705.6094"/><ellipse cx="2147.5" cy="717.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="2156.5" y="719.8198">Position()</text><ellipse cx="2147.5" cy="730.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="2156.5" y="732.6245">Position(const int x, const int y)</text><ellipse cx="2147.5" cy="743.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2156.5" y="745.4292">Position(const Position&amp; other)</text><ellipse cx="2147.5" cy="755.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2156.5" y="758.2339">~Position()</text><ellipse cx="2147.5" cy="768.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="2156.5" y="771.0386">operator=(const Position&amp; other) : Position&amp;</text><!--class ECS.Velocity--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="ECS.Velocity" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="22.5" y="640"/><ellipse cx="133.75" cy="656" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M136.7188,661.6406 Q136.1406,661.9375 135.5,662.0781 Q134.8594,662.2344 134.1563,662.2344 Q131.6563,662.2344 130.3281,660.5938 Q129.0156,658.9375 129.0156,655.8125 Q129.0156,652.6875 130.3281,651.0313 Q131.6563,649.375 134.1563,649.375 Q134.8594,649.375 135.5,649.5313 Q136.1563,649.6875 136.7188,649.9844 L136.7188,652.7031 Q136.0938,652.125 135.5,651.8594 Q134.9063,651.5781 134.2813,651.5781 Q132.9375,651.5781 132.25,652.6563 Q131.5625,653.7188 131.5625,655.8125 Q131.5625,657.9063 132.25,658.9844 Q132.9375,660.0469 134.2813,660.0469 Q134.9063,660.0469 135.5,659.7813 Q136.0938,659.5 136.7188,658.9219 L136.7188,661.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="154.25" y="660.1543">Velocity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="300.5" y1="672" y2="672"/><ellipse cx="33.5" cy="683.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="42.5" y="686.2104">_vx : int</text><ellipse cx="33.5" cy="696.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="42.5" y="699.0151">_vy : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="23.5" x2="300.5" y1="705.6094" y2="705.6094"/><ellipse cx="33.5" cy="717.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="42.5" y="719.8198">Velocity()</text><ellipse cx="33.5" cy="730.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="42.5" y="732.6245">Velocity(const int x, const int y)</text><ellipse cx="33.5" cy="743.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="42.5" y="745.4292">Velocity(const Velocity&amp; other)</text><ellipse cx="33.5" cy="755.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="42.5" y="758.2339">~Velocity()</text><ellipse cx="33.5" cy="768.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="42.5" y="771.0386">operator=(const Velocity&amp; other) : Velocity&amp;</text><!--class ECS.entityDetails--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="ECS.entityDetails" style="stroke: #A80036; stroke-width: 1.5;" width="387" x="336.5" y="634"/><ellipse cx="486.75" cy="650" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M489.7188,655.6406 Q489.1406,655.9375 488.5,656.0781 Q487.8594,656.2344 487.1563,656.2344 Q484.6563,656.2344 483.3281,654.5938 Q482.0156,652.9375 482.0156,649.8125 Q482.0156,646.6875 483.3281,645.0313 Q484.6563,643.375 487.1563,643.375 Q487.8594,643.375 488.5,643.5313 Q489.1563,643.6875 489.7188,643.9844 L489.7188,646.7031 Q489.0938,646.125 488.5,645.8594 Q487.9063,645.5781 487.2813,645.5781 Q485.9375,645.5781 485.25,646.6563 Q484.5625,647.7188 484.5625,649.8125 Q484.5625,651.9063 485.25,652.9844 Q485.9375,654.0469 487.2813,654.0469 Q487.9063,654.0469 488.5,653.7813 Q489.0938,653.5 489.7188,652.9219 L489.7188,655.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="507.25" y="654.1543">entityDetails</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="337.5" x2="722.5" y1="666" y2="666"/><ellipse cx="347.5" cy="677.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="356.5" y="680.2104">_state : animationState</text><ellipse cx="347.5" cy="690.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="356.5" y="693.0151">_toUpdate : bool</text><ellipse cx="347.5" cy="703.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="356.5" y="705.8198">_type : entityType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="337.5" x2="722.5" y1="712.4141" y2="712.4141"/><ellipse cx="347.5" cy="724.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="356.5" y="726.6245">entityDetails()</text><ellipse cx="347.5" cy="737.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="361" x="356.5" y="739.4292">entityDetails(const entityType type, const animationState state)</text><ellipse cx="347.5" cy="749.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="356.5" y="752.2339">entityDetails(const entityDetails&amp; other)</text><ellipse cx="347.5" cy="762.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="356.5" y="765.0386">~entityDetails()</text><ellipse cx="347.5" cy="775.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307" x="356.5" y="777.8433">operator=(const entityDetails&amp; other) : entityDetails&amp;</text><!--class BinaryProtocol.Codec--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="BinaryProtocol.Codec" style="stroke: #A80036; stroke-width: 1.5;" width="383" x="4212.5" y="1981.5"/><ellipse cx="4380.25" cy="1997.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4383.2188,2003.1406 Q4382.6406,2003.4375 4382,2003.5781 Q4381.3594,2003.7344 4380.6563,2003.7344 Q4378.1563,2003.7344 4376.8281,2002.0938 Q4375.5156,2000.4375 4375.5156,1997.3125 Q4375.5156,1994.1875 4376.8281,1992.5313 Q4378.1563,1990.875 4380.6563,1990.875 Q4381.3594,1990.875 4382,1991.0313 Q4382.6563,1991.1875 4383.2188,1991.4844 L4383.2188,1994.2031 Q4382.5938,1993.625 4382,1993.3594 Q4381.4063,1993.0781 4380.7813,1993.0781 Q4379.4375,1993.0781 4378.75,1994.1563 Q4378.0625,1995.2188 4378.0625,1997.3125 Q4378.0625,1999.4063 4378.75,2000.4844 Q4379.4375,2001.5469 4380.7813,2001.5469 Q4381.4063,2001.5469 4382,2001.2813 Q4382.5938,2001 4383.2188,2000.4219 L4383.2188,2003.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="4400.75" y="2001.6543">Codec</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4213.5" x2="4594.5" y1="2013.5" y2="2013.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4213.5" x2="4594.5" y1="2021.5" y2="2021.5"/><ellipse cx="4223.5" cy="2033.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="4232.5" y="2035.7104">Codec()</text><ellipse cx="4223.5" cy="2046.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="4232.5" y="2048.5151">Codec(const Codec&amp; other)</text><ellipse cx="4223.5" cy="2059.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="4232.5" y="2061.3198">~Codec()</text><ellipse cx="4223.5" cy="2071.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="4232.5" y="2074.1245">operator=(const Codec&amp; other) : Codec&amp;</text><ellipse cx="4223.5" cy="2084.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="4232.5" y="2086.9292">createPacket(const std::string&amp; message) : Packet</text><ellipse cx="4223.5" cy="2097.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357" x="4232.5" y="2099.7339">unserialize(const boost::array&lt;uint8_t, 1024&gt;&amp; input) : Packet</text><ellipse cx="4223.5" cy="2110.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="4232.5" y="2112.5386">check_packet(const Packet&amp; toCheck) : bool</text><ellipse cx="4223.5" cy="2123.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="4232.5" y="2125.3433">serialize(const Packet&amp; input) : std::vector&lt;uint8_t&gt;</text><!--class BinaryProtocol.Packet--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="86.4141" id="BinaryProtocol.Packet" style="stroke: #A80036; stroke-width: 1.5;" width="303" x="3874.5" y="2013.5"/><ellipse cx="4000.25" cy="2029.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4003.2188,2035.1406 Q4002.6406,2035.4375 4002,2035.5781 Q4001.3594,2035.7344 4000.6563,2035.7344 Q3998.1563,2035.7344 3996.8281,2034.0938 Q3995.5156,2032.4375 3995.5156,2029.3125 Q3995.5156,2026.1875 3996.8281,2024.5313 Q3998.1563,2022.875 4000.6563,2022.875 Q4001.3594,2022.875 4002,2023.0313 Q4002.6563,2023.1875 4003.2188,2023.4844 L4003.2188,2026.2031 Q4002.5938,2025.625 4002,2025.3594 Q4001.4063,2025.0781 4000.7813,2025.0781 Q3999.4375,2025.0781 3998.75,2026.1563 Q3998.0625,2027.2188 3998.0625,2029.3125 Q3998.0625,2031.4063 3998.75,2032.4844 Q3999.4375,2033.5469 4000.7813,2033.5469 Q4001.4063,2033.5469 4002,2033.2813 Q4002.5938,2033 4003.2188,2032.4219 L4003.2188,2035.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="4020.75" y="2033.6543">Packet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3875.5" x2="4176.5" y1="2045.5" y2="2045.5"/><ellipse cx="3885.5" cy="2057.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="3894.5" y="2059.7104">_message : std::string</text><ellipse cx="3885.5" cy="2070.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="3894.5" y="2072.5151">_magicNumber : uint32_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3875.5" x2="4176.5" y1="2079.1094" y2="2079.1094"/><ellipse cx="3885.5" cy="2091.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="3894.5" y="2093.3198">operator==(const Packet&amp; other) : bool {query}</text><!--class AMonster--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="AMonster" style="stroke: #A80036; stroke-width: 1.5;" width="299" x="1131.5" y="2288"/><ellipse cx="1247.75" cy="2304" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1247.8594,2299.3438 L1246.7031,2304.4219 L1249.0313,2304.4219 L1247.8594,2299.3438 Z M1246.375,2297.1094 L1249.3594,2297.1094 L1252.7188,2309.5 L1250.2656,2309.5 L1249.5,2306.4375 L1246.2188,2306.4375 L1245.4688,2309.5 L1243.0313,2309.5 L1246.375,2297.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="1268.25" y="2308.1543">AMonster</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1132.5" x2="1429.5" y1="2320" y2="2320"/><polygon fill="none" points="1142.5,2326.9023,1146.5,2330.9023,1142.5,2334.9023,1138.5,2330.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1151.5" y="2334.2104">_filter : ECS::Filter</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1132.5" x2="1429.5" y1="2340.8047" y2="2340.8047"/><ellipse cx="1142.5" cy="2352.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1151.5" y="2355.0151">AMonster()</text><ellipse cx="1142.5" cy="2365.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1151.5" y="2367.8198">AMonster(const AMonster&amp; other)</text><ellipse cx="1142.5" cy="2378.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1151.5" y="2380.6245">~AMonster()</text><ellipse cx="1142.5" cy="2391.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="1151.5" y="2393.4292">operator=(const AMonster&amp; other) : AMonster&amp;</text><ellipse cx="1142.5" cy="2403.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="268" x="1151.5" y="2406.2339">update(const float dt, ECS::ECSEngine &amp;) : void</text><!--class Buffer--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="150.4375" id="Buffer" style="stroke: #A80036; stroke-width: 1.5;" width="404" x="5848" y="1981.5"/><ellipse cx="6027.25" cy="1997.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6030.2188,2003.1406 Q6029.6406,2003.4375 6029,2003.5781 Q6028.3594,2003.7344 6027.6563,2003.7344 Q6025.1563,2003.7344 6023.8281,2002.0938 Q6022.5156,2000.4375 6022.5156,1997.3125 Q6022.5156,1994.1875 6023.8281,1992.5313 Q6025.1563,1990.875 6027.6563,1990.875 Q6028.3594,1990.875 6029,1991.0313 Q6029.6563,1991.1875 6030.2188,1991.4844 L6030.2188,1994.2031 Q6029.5938,1993.625 6029,1993.3594 Q6028.4063,1993.0781 6027.7813,1993.0781 Q6026.4375,1993.0781 6025.75,1994.1563 Q6025.0625,1995.2188 6025.0625,1997.3125 Q6025.0625,1999.4063 6025.75,2000.4844 Q6026.4375,2001.5469 6027.7813,2001.5469 Q6028.4063,2001.5469 6029,2001.2813 Q6029.5938,2001 6030.2188,2000.4219 L6030.2188,2003.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="6047.75" y="2001.6543">Buffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5849" x2="6251" y1="2013.5" y2="2013.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5856" y="2022.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="5868" y="2027.7104">_sBuffer : std::map&lt;boost::uuids::uuid, std::vector&lt;std::string&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5849" x2="6251" y1="2034.3047" y2="2034.3047"/><ellipse cx="5859" cy="2046.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="5868" y="2048.5151">Buffer()</text><ellipse cx="5859" cy="2059.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5868" y="2061.3198">Buffer(const Buffer&amp; other)</text><ellipse cx="5859" cy="2071.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="5868" y="2074.1245">~Buffer()</text><ellipse cx="5859" cy="2084.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="5868" y="2086.9292">operator=(const Buffer&amp; other) : Buffer&amp;</text><ellipse cx="5859" cy="2097.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="5868" y="2099.7339">isDataAvailable(boost::uuids::uuid&amp; uuid) : bool {query}</text><ellipse cx="5859" cy="2110.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="5868" y="2112.5386">getData(boost::uuids::uuid&amp; uuid) : std::vector&lt;std::string&gt;&amp;</text><ellipse cx="5859" cy="2123.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="372" x="5868" y="2125.3433">addData(boost::uuids::uuid&amp; uuid, const std::string&amp; data) : void</text><!--class Client--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="188.8516" id="Client" style="stroke: #A80036; stroke-width: 1.5;" width="427" x="3253.5" y="1962"/><ellipse cx="3445.25" cy="1978" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3448.2188,1983.6406 Q3447.6406,1983.9375 3447,1984.0781 Q3446.3594,1984.2344 3445.6563,1984.2344 Q3443.1563,1984.2344 3441.8281,1982.5938 Q3440.5156,1980.9375 3440.5156,1977.8125 Q3440.5156,1974.6875 3441.8281,1973.0313 Q3443.1563,1971.375 3445.6563,1971.375 Q3446.3594,1971.375 3447,1971.5313 Q3447.6563,1971.6875 3448.2188,1971.9844 L3448.2188,1974.7031 Q3447.5938,1974.125 3447,1973.8594 Q3446.4063,1973.5781 3445.7813,1973.5781 Q3444.4375,1973.5781 3443.75,1974.6563 Q3443.0625,1975.7188 3443.0625,1977.8125 Q3443.0625,1979.9063 3443.75,1980.9844 Q3444.4375,1982.0469 3445.7813,1982.0469 Q3446.4063,1982.0469 3447,1981.7813 Q3447.5938,1981.5 3448.2188,1980.9219 L3448.2188,1983.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="3465.75" y="1982.1543">Client</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3254.5" x2="3679.5" y1="1994" y2="1994"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3261.5" y="2002.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="3273.5" y="2008.2104">_endpoint : boost::asio::ip::udp::endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3261.5" y="2015.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="3273.5" y="2021.0151">_uuid : boost::uuids::uuid</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3261.5" y="2028.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3273.5" y="2033.8198">_state : clientState</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3254.5" x2="3679.5" y1="2040.4141" y2="2040.4141"/><ellipse cx="3264.5" cy="2052.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="3273.5" y="2054.6245">Client(const boost::asio::ip::address&amp; adr, const unsigned short port)</text><ellipse cx="3264.5" cy="2065.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="3273.5" y="2067.4292">Client(const Client&amp; other)</text><ellipse cx="3264.5" cy="2077.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="3273.5" y="2080.2339">~Client()</text><ellipse cx="3264.5" cy="2090.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="3273.5" y="2093.0386">operator=(const Client&amp; other) : Client&amp;</text><ellipse cx="3264.5" cy="2103.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3273.5" y="2105.8433">getEndpoint() : boost::asio::ip::udp::endpoint&amp;</text><ellipse cx="3264.5" cy="2116.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="3273.5" y="2118.6479">getUuid() : boost::uuids::uuid&amp;</text><ellipse cx="3264.5" cy="2129.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="3273.5" y="2131.4526">getState() : int {query}</text><ellipse cx="3264.5" cy="2141.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="3273.5" y="2144.2573">setState(clientState state) : void</text><!--class DLLoader--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="DLLoader" style="stroke: #A80036; stroke-width: 1.5;" width="413" x="2328.5" y="1987.5"/><ellipse cx="2501.75" cy="2003.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2504.7188,2009.1406 Q2504.1406,2009.4375 2503.5,2009.5781 Q2502.8594,2009.7344 2502.1563,2009.7344 Q2499.6563,2009.7344 2498.3281,2008.0938 Q2497.0156,2006.4375 2497.0156,2003.3125 Q2497.0156,2000.1875 2498.3281,1998.5313 Q2499.6563,1996.875 2502.1563,1996.875 Q2502.8594,1996.875 2503.5,1997.0313 Q2504.1563,1997.1875 2504.7188,1997.4844 L2504.7188,2000.2031 Q2504.0938,1999.625 2503.5,1999.3594 Q2502.9063,1999.0781 2502.2813,1999.0781 Q2500.9375,1999.0781 2500.25,2000.1563 Q2499.5625,2001.2188 2499.5625,2003.3125 Q2499.5625,2005.4063 2500.25,2006.4844 Q2500.9375,2007.5469 2502.2813,2007.5469 Q2502.9063,2007.5469 2503.5,2007.2813 Q2504.0938,2007 2504.7188,2006.4219 L2504.7188,2009.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="2522.25" y="2007.6543">DLLoader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2329.5" x2="2740.5" y1="2019.5" y2="2019.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2336.5" y="2028.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="2348.5" y="2033.7104">_handler : void*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2329.5" x2="2740.5" y1="2040.3047" y2="2040.3047"/><ellipse cx="2339.5" cy="2052.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="2348.5" y="2054.5151">DLLoader(const std::string&amp; libpath)</text><ellipse cx="2339.5" cy="2065.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2348.5" y="2067.3198">DLLoader(const DLLoader&amp; other)</text><ellipse cx="2339.5" cy="2077.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="2348.5" y="2080.1245">catch(ErrorDLLoader const&amp; err)</text><ellipse cx="2339.5" cy="2090.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2348.5" y="2092.9292">~DLLoader()</text><ellipse cx="2339.5" cy="2103.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="2348.5" y="2105.7339">operator=(const DLLoader&amp; other) : DLLoader&amp;</text><ellipse cx="2339.5" cy="2116.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="387" x="2348.5" y="2118.5386">getInstance(const std::string&amp; name) : std::unique_ptr&lt;T&gt; {query}</text><!--class IMonster--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="86.4141" id="IMonster" style="stroke: #A80036; stroke-width: 1.5;" width="294" x="1616" y="2013.5"/><ellipse cx="1731.75" cy="2029.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1731.8594,2024.8438 L1730.7031,2029.9219 L1733.0313,2029.9219 L1731.8594,2024.8438 Z M1730.375,2022.6094 L1733.3594,2022.6094 L1736.7188,2035 L1734.2656,2035 L1733.5,2031.9375 L1730.2188,2031.9375 L1729.4688,2035 L1727.0313,2035 L1730.375,2022.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="54" x="1752.25" y="2033.6543">IMonster</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1617" x2="1909" y1="2045.5" y2="2045.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1617" x2="1909" y1="2053.5" y2="2053.5"/><ellipse cx="1627" cy="2065.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1636" y="2067.7104">~IMonster()</text><ellipse cx="1627" cy="2078.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="1636" y="2080.5151">init(ECS::ECSEngine &amp;) : void</text><ellipse cx="1627" cy="2091.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="268" x="1636" y="2093.3198">update(const float dt, ECS::ECSEngine &amp;) : void</text><!--class INetwork--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="INetwork" style="stroke: #A80036; stroke-width: 1.5;" width="415" x="5842.5" y="1073.5"/><ellipse cx="6017.75" cy="1089.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6017.8594,1084.8438 L6016.7031,1089.9219 L6019.0313,1089.9219 L6017.8594,1084.8438 Z M6016.375,1082.6094 L6019.3594,1082.6094 L6022.7188,1095 L6020.2656,1095 L6019.5,1091.9375 L6016.2188,1091.9375 L6015.4688,1095 L6013.0313,1095 L6016.375,1082.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="56" x="6038.25" y="1093.6543">INetwork</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5843.5" x2="6256.5" y1="1105.5" y2="1105.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5843.5" x2="6256.5" y1="1113.5" y2="1113.5"/><ellipse cx="5853.5" cy="1125.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="5862.5" y="1127.7104">~INetwork()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5850.5" y="1135.207"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="389" x="5862.5" y="1140.5151">handleReceive(const boost::system::error_code &amp;, std::size_t) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5850.5" y="1148.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="5862.5" y="1153.3198">send(const std::string &amp;) : void</text><ellipse cx="5853.5" cy="1163.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="70" x="5862.5" y="1166.1245">start() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5850.5" y="1173.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="115" x="5862.5" y="1178.9292">startReceive() : void</text><ellipse cx="5853.5" cy="1189.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="5862.5" y="1191.7339">stop() : void</text><!--class Lobby--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="342.5078" id="Lobby" style="stroke: #A80036; stroke-width: 1.5;" width="864" x="4949" y="1885"/><ellipse cx="5358.75" cy="1901" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5361.7188,1906.6406 Q5361.1406,1906.9375 5360.5,1907.0781 Q5359.8594,1907.2344 5359.1563,1907.2344 Q5356.6563,1907.2344 5355.3281,1905.5938 Q5354.0156,1903.9375 5354.0156,1900.8125 Q5354.0156,1897.6875 5355.3281,1896.0313 Q5356.6563,1894.375 5359.1563,1894.375 Q5359.8594,1894.375 5360.5,1894.5313 Q5361.1563,1894.6875 5361.7188,1894.9844 L5361.7188,1897.7031 Q5361.0938,1897.125 5360.5,1896.8594 Q5359.9063,1896.5781 5359.2813,1896.5781 Q5357.9375,1896.5781 5357.25,1897.6563 Q5356.5625,1898.7188 5356.5625,1900.8125 Q5356.5625,1902.9063 5357.25,1903.9844 Q5357.9375,1905.0469 5359.2813,1905.0469 Q5359.9063,1905.0469 5360.5,1904.7813 Q5361.0938,1904.5 5361.7188,1903.9219 L5361.7188,1906.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="36" x="5379.25" y="1905.1543">Lobby</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4950" x2="5812" y1="1917" y2="1917"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="1925.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="4969" y="1931.2104">_state : lobbyState</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="1938.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="4969" y="1944.0151">_available : std::queue&lt;ECS::playerNumber&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="1951.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="4969" y="1956.8198">_name : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="1964.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4969" y="1969.6245">_clients : std::vector&lt;clientPtr&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="1977.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="4969" y="1982.4292">_players : std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4950" x2="5812" y1="1989.0234" y2="1989.0234"/><ellipse cx="4960" cy="2000.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="4969" y="2003.2339">Lobby(const std::string&amp; name)</text><ellipse cx="4960" cy="2013.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="4969" y="2016.0386">Lobby(const Lobby&amp; other)</text><ellipse cx="4960" cy="2026.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="4969" y="2028.8433">~Lobby()</text><ellipse cx="4960" cy="2039.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="4969" y="2041.6479">getPlayerNumber(shared_ptr&lt;Client&gt; client) : ECS::playerNumber</text><ellipse cx="4960" cy="2052.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="4969" y="2054.4526">operator=(const Lobby&amp; other) : Lobby&amp;</text><ellipse cx="4960" cy="2064.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="4969" y="2067.2573">hasClient(shared_ptr&lt;Client&gt; client) : bool</text><ellipse cx="4960" cy="2077.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="4969" y="2080.062">isReadyToGo() : bool</text><ellipse cx="4960" cy="2090.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="4969" y="2092.8667">isRoomFull() : bool</text><ellipse cx="4960" cy="2103.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="4969" y="2105.6714">getState() : int {query}</text><ellipse cx="4960" cy="2116.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="4969" y="2118.4761">getQueuePlayers() : std::queue&lt;ECS::playerNumber&gt;&amp;</text><ellipse cx="4960" cy="2128.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4969" y="2131.2808">getName() : std::string {query}</text><ellipse cx="4960" cy="2141.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="4969" y="2144.0854">getClients() : std::vector&lt;clientPtr&gt;&amp;</text><ellipse cx="4960" cy="2154.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="4969" y="2156.8901">getPlayers() : std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt;&amp;</text><ellipse cx="4960" cy="2167.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4969" y="2169.6948">addClient(shared_ptr&lt;Client&gt; client) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4957" y="2177.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="678" x="4969" y="2182.4995">handleSend(const std::string&amp; message, const boost::system::error_code&amp; error, std::size_t bytesTransferred) : void</text><ellipse cx="4960" cy="2192.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="4969" y="2195.3042">loadingLobby() : void</text><ellipse cx="4960" cy="2205.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4969" y="2208.1089">removeClient(shared_ptr&lt;Client&gt; client) : void</text><ellipse cx="4960" cy="2218.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="838" x="4969" y="2220.9136">startGame(const std::shared_ptr&lt;boost::asio::ip::udp::socket&gt;&amp; socket, const std::shared_ptr&lt;Buffer&gt;&amp; buffer, const std::string&amp; libPath) : void</text><!--class SignalHandler--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="99.2188" id="SignalHandler" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="6287.5" y="2007"/><ellipse cx="6371.25" cy="2023" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6374.2188,2028.6406 Q6373.6406,2028.9375 6373,2029.0781 Q6372.3594,2029.2344 6371.6563,2029.2344 Q6369.1563,2029.2344 6367.8281,2027.5938 Q6366.5156,2025.9375 6366.5156,2022.8125 Q6366.5156,2019.6875 6367.8281,2018.0313 Q6369.1563,2016.375 6371.6563,2016.375 Q6372.3594,2016.375 6373,2016.5313 Q6373.6563,2016.6875 6374.2188,2016.9844 L6374.2188,2019.7031 Q6373.5938,2019.125 6373,2018.8594 Q6372.4063,2018.5781 6371.7813,2018.5781 Q6370.4375,2018.5781 6369.75,2019.6563 Q6369.0625,2020.7188 6369.0625,2022.8125 Q6369.0625,2024.9063 6369.75,2025.9844 Q6370.4375,2027.0469 6371.7813,2027.0469 Q6372.4063,2027.0469 6373,2026.7813 Q6373.5938,2026.5 6374.2188,2025.9219 L6374.2188,2028.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87" x="6391.75" y="2027.1543">SignalHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6288.5" x2="6549.5" y1="2039" y2="2039"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6288.5" x2="6549.5" y1="2047" y2="2047"/><ellipse cx="6298.5" cy="2058.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="6307.5" y="2061.2104">SignalHandler()</text><ellipse cx="6298.5" cy="2071.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="6307.5" y="2074.0151">~SignalHandler()</text><ellipse cx="6298.5" cy="2084.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="6307.5" y="2086.8198">isInterrupted() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6295.5" y="2094.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="237" x="6307.5" y="2099.6245">signal_callback_handler(int signum) : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6307.5" x2="6544.5" y1="2101.6245" y2="2101.6245"/><!--class Zipper--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="112.0234" id="Zipper" style="stroke: #A80036; stroke-width: 1.5;" width="797" x="5722.5" y="65.5"/><ellipse cx="6096.25" cy="81.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6099.2188,87.1406 Q6098.6406,87.4375 6098,87.5781 Q6097.3594,87.7344 6096.6563,87.7344 Q6094.1563,87.7344 6092.8281,86.0938 Q6091.5156,84.4375 6091.5156,81.3125 Q6091.5156,78.1875 6092.8281,76.5313 Q6094.1563,74.875 6096.6563,74.875 Q6097.3594,74.875 6098,75.0313 Q6098.6563,75.1875 6099.2188,75.4844 L6099.2188,78.2031 Q6098.5938,77.625 6098,77.3594 Q6097.4063,77.0781 6096.7813,77.0781 Q6095.4375,77.0781 6094.75,78.1563 Q6094.0625,79.2188 6094.0625,81.3125 Q6094.0625,83.4063 6094.75,84.4844 Q6095.4375,85.5469 6096.7813,85.5469 Q6097.4063,85.5469 6098,85.2813 Q6098.5938,85 6099.2188,84.4219 L6099.2188,87.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="6116.75" y="85.6543">Zipper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5723.5" x2="6518.5" y1="97.5" y2="97.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5723.5" x2="6518.5" y1="105.5" y2="105.5"/><ellipse cx="5733.5" cy="117.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="5742.5" y="119.7104">Zipper()</text><ellipse cx="5733.5" cy="130.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="5742.5" y="132.5151">Zipper(const Zipper&amp; other)</text><ellipse cx="5733.5" cy="143.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="5742.5" y="145.3198">~Zipper()</text><ellipse cx="5733.5" cy="155.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="5742.5" y="158.1245">operator=(const Zipper&amp; other) : Zipper&amp;</text><ellipse cx="5733.5" cy="168.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="771" x="5742.5" y="170.9292">zip(T&amp;&amp; ... containers ) -&gt;boost::iterator_range&lt;boost::zip_iterator&lt;decltype ( boost::make_tuple ( std::begin ( containers ) ... )) : auto</text><line style="stroke: #000000; stroke-width: 1.0;" x1="5742.5" x2="6513.5" y1="172.9292" y2="172.9292"/><!--class dirReader--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="137.6328" id="dirReader" style="stroke: #A80036; stroke-width: 1.5;" width="483" x="6554.5" y="52.5"/><ellipse cx="6761.25" cy="68.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6764.2188,74.1406 Q6763.6406,74.4375 6763,74.5781 Q6762.3594,74.7344 6761.6563,74.7344 Q6759.1563,74.7344 6757.8281,73.0938 Q6756.5156,71.4375 6756.5156,68.3125 Q6756.5156,65.1875 6757.8281,63.5313 Q6759.1563,61.875 6761.6563,61.875 Q6762.3594,61.875 6763,62.0313 Q6763.6563,62.1875 6764.2188,62.4844 L6764.2188,65.2031 Q6763.5938,64.625 6763,64.3594 Q6762.4063,64.0781 6761.7813,64.0781 Q6760.4375,64.0781 6759.75,65.1563 Q6759.0625,66.2188 6759.0625,68.3125 Q6759.0625,70.4063 6759.75,71.4844 Q6760.4375,72.5469 6761.7813,72.5469 Q6762.4063,72.5469 6763,72.2813 Q6763.5938,72 6764.2188,71.4219 L6764.2188,74.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="6781.75" y="72.6543">dirReader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6555.5" x2="7036.5" y1="84.5" y2="84.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6562.5" y="93.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="6574.5" y="98.7104">_path : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6555.5" x2="7036.5" y1="105.3047" y2="105.3047"/><ellipse cx="6565.5" cy="117.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="6574.5" y="119.5151">dirReader(const std::string&amp; name)</text><ellipse cx="6565.5" cy="130.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="6574.5" y="132.3198">dirReader(const dirReader&amp; other)</text><ellipse cx="6565.5" cy="142.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="6574.5" y="145.1245">~dirReader()</text><ellipse cx="6565.5" cy="155.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="6574.5" y="157.9292">operator=(const dirReader&amp; other) : dirReader&amp;</text><ellipse cx="6565.5" cy="168.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="6574.5" y="170.7339">findLibraries() : std::vector&lt;std::string&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6562.5" y="178.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="457" x="6574.5" y="183.5386">pushLibPath(const std::string&amp; name, std::vector&lt;std::string&gt;&amp; libPaths) : void</text><!--class gameLoop--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="227.2656" id="gameLoop" style="stroke: #A80036; stroke-width: 1.5;" width="1193" x="4494.5" y="8"/><ellipse cx="5054.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5057.2188,29.6406 Q5056.6406,29.9375 5056,30.0781 Q5055.3594,30.2344 5054.6563,30.2344 Q5052.1563,30.2344 5050.8281,28.5938 Q5049.5156,26.9375 5049.5156,23.8125 Q5049.5156,20.6875 5050.8281,19.0313 Q5052.1563,17.375 5054.6563,17.375 Q5055.3594,17.375 5056,17.5313 Q5056.6563,17.6875 5057.2188,17.9844 L5057.2188,20.7031 Q5056.5938,20.125 5056,19.8594 Q5055.4063,19.5781 5054.7813,19.5781 Q5053.4375,19.5781 5052.75,20.6563 Q5052.0625,21.7188 5052.0625,23.8125 Q5052.0625,25.9063 5052.75,26.9844 Q5053.4375,28.0469 5054.7813,28.0469 Q5055.4063,28.0469 5056,27.7813 Q5056.5938,27.5 5057.2188,26.9219 L5057.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="5074.75" y="28.1543">gameLoop</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4495.5" x2="5686.5" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="48.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4514.5" y="54.2104">_engine : ECS::ECSEngine</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="61.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="4514.5" y="67.0151">_buffer : std::shared_ptr&lt;Buffer&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="74.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="4514.5" y="79.8198">_end : std::shared_ptr&lt;bool&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4495.5" x2="5686.5" y1="86.4141" y2="86.4141"/><ellipse cx="4505.5" cy="98.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4514.5" y="100.6245">gameLoop()</text><ellipse cx="4505.5" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="4514.5" y="113.4292">gameLoop(const gameLoop &amp;)</text><ellipse cx="4505.5" cy="123.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="4514.5" y="126.2339">~gameLoop()</text><ellipse cx="4505.5" cy="136.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="4514.5" y="139.0386">operator=(const gameLoop &amp;) : gameLoop&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="146.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="578" x="4514.5" y="151.8433">createPlayers(std::vector&lt;clientPtr&gt; &amp;, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt; &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="159.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="4514.5" y="164.6479">handleSend(const std::string &amp;, const boost::system::error_code &amp;, std::size_t) : void</text><ellipse cx="4505.5" cy="175.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1151" x="4514.5" y="177.4526">prepareGame(std::vector&lt;clientPtr&gt; &amp;, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt; &amp;, shared_ptr&lt;boost::asio::ip::udp::socket&gt; &amp;, const std::shared_ptr&lt;Buffer&gt; &amp;, const std::string &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="184.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="4514.5" y="190.2573">registerComponents() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="197.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1167" x="4514.5" y="203.062">registerSystems(std::vector&lt;clientPtr&gt; &amp;, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt; &amp;, shared_ptr&lt;boost::asio::ip::udp::socket&gt; &amp;, const std::shared_ptr&lt;Buffer&gt; &amp;, const std::string &amp;) : void</text><ellipse cx="4505.5" cy="213.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="642" x="4514.5" y="215.8667">run(std::vector&lt;clientPtr&gt; &amp;, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt; &amp;, Lobby::lobbyState &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4502.5" y="223.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="4514.5" y="228.6714">update(const float) : void</text><!--class pirate--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="pirate" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="794.5" y="2473"/><ellipse cx="920.25" cy="2489" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M923.2188,2494.6406 Q922.6406,2494.9375 922,2495.0781 Q921.3594,2495.2344 920.6563,2495.2344 Q918.1563,2495.2344 916.8281,2493.5938 Q915.5156,2491.9375 915.5156,2488.8125 Q915.5156,2485.6875 916.8281,2484.0313 Q918.1563,2482.375 920.6563,2482.375 Q921.3594,2482.375 922,2482.5313 Q922.6563,2482.6875 923.2188,2482.9844 L923.2188,2485.7031 Q922.5938,2485.125 922,2484.8594 Q921.4063,2484.5781 920.7813,2484.5781 Q919.4375,2484.5781 918.75,2485.6563 Q918.0625,2486.7188 918.0625,2488.8125 Q918.0625,2490.9063 918.75,2491.9844 Q919.4375,2493.0469 920.7813,2493.0469 Q921.4063,2493.0469 922,2492.7813 Q922.5938,2492.5 923.2188,2491.9219 L923.2188,2494.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="940.75" y="2493.1543">pirate</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="795.5" x2="1090.5" y1="2505" y2="2505"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="795.5" x2="1090.5" y1="2513" y2="2513"/><ellipse cx="805.5" cy="2524.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="814.5" y="2527.2104">pirate()</text><ellipse cx="805.5" cy="2537.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="814.5" y="2540.0151">pirate(const pirate&amp; other)</text><ellipse cx="805.5" cy="2550.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="814.5" y="2552.8198">~pirate()</text><ellipse cx="805.5" cy="2563.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="814.5" y="2565.6245">operator=(const pirate&amp; other) : pirate&amp;</text><ellipse cx="805.5" cy="2576.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="814.5" y="2578.4292">init(ECS::ECSEngine &amp;) : void</text><ellipse cx="805.5" cy="2588.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="814.5" y="2591.2339">update(const float dt, ECS::ECSEngine &amp;) : void</text><!--class spaceship--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="spaceship" style="stroke: #A80036; stroke-width: 1.5;" width="309" x="1126.5" y="2473"/><ellipse cx="1244.75" cy="2489" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1247.7188,2494.6406 Q1247.1406,2494.9375 1246.5,2495.0781 Q1245.8594,2495.2344 1245.1563,2495.2344 Q1242.6563,2495.2344 1241.3281,2493.5938 Q1240.0156,2491.9375 1240.0156,2488.8125 Q1240.0156,2485.6875 1241.3281,2484.0313 Q1242.6563,2482.375 1245.1563,2482.375 Q1245.8594,2482.375 1246.5,2482.5313 Q1247.1563,2482.6875 1247.7188,2482.9844 L1247.7188,2485.7031 Q1247.0938,2485.125 1246.5,2484.8594 Q1245.9063,2484.5781 1245.2813,2484.5781 Q1243.9375,2484.5781 1243.25,2485.6563 Q1242.5625,2486.7188 1242.5625,2488.8125 Q1242.5625,2490.9063 1243.25,2491.9844 Q1243.9375,2493.0469 1245.2813,2493.0469 Q1245.9063,2493.0469 1246.5,2492.7813 Q1247.0938,2492.5 1247.7188,2491.9219 L1247.7188,2494.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="1265.25" y="2493.1543">spaceship</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1127.5" x2="1434.5" y1="2505" y2="2505"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1127.5" x2="1434.5" y1="2513" y2="2513"/><ellipse cx="1137.5" cy="2524.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1146.5" y="2527.2104">spaceship()</text><ellipse cx="1137.5" cy="2537.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1146.5" y="2540.0151">spaceship(const spaceship&amp; other)</text><ellipse cx="1137.5" cy="2550.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1146.5" y="2552.8198">~spaceship()</text><ellipse cx="1137.5" cy="2563.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1146.5" y="2565.6245">operator=(const spaceship&amp; other) : spaceship&amp;</text><ellipse cx="1137.5" cy="2576.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1146.5" y="2578.4292">init(ECS::ECSEngine &amp;) : void</text><ellipse cx="1137.5" cy="2588.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1146.5" y="2591.2339">update(const float dt, ECS::ECSEngine &amp;) : void</text><!--class udpServer--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="508.9688" id="udpServer" style="stroke: #A80036; stroke-width: 1.5;" width="937" x="5581.5" y="1316"/><ellipse cx="6013.75" cy="1332" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6016.7188,1337.6406 Q6016.1406,1337.9375 6015.5,1338.0781 Q6014.8594,1338.2344 6014.1563,1338.2344 Q6011.6563,1338.2344 6010.3281,1336.5938 Q6009.0156,1334.9375 6009.0156,1331.8125 Q6009.0156,1328.6875 6010.3281,1327.0313 Q6011.6563,1325.375 6014.1563,1325.375 Q6014.8594,1325.375 6015.5,1325.5313 Q6016.1563,1325.6875 6016.7188,1325.9844 L6016.7188,1328.7031 Q6016.0938,1328.125 6015.5,1327.8594 Q6014.9063,1327.5781 6014.2813,1327.5781 Q6012.9375,1327.5781 6012.25,1328.6563 Q6011.5625,1329.7188 6011.5625,1331.8125 Q6011.5625,1333.9063 6012.25,1334.9844 Q6012.9375,1336.0469 6014.2813,1336.0469 Q6014.9063,1336.0469 6015.5,1335.7813 Q6016.0938,1335.5 6016.7188,1334.9219 L6016.7188,1337.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="6034.25" y="1336.1543">udpServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5582.5" x2="6517.5" y1="1348" y2="1348"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1356.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5601.5" y="1362.2104">_binCodec : BinaryProtocol::Codec</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1369.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="5601.5" y="1375.0151">_sigHandler : SignalHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1382.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5601.5" y="1387.8198">_data : boost::array&lt;uint8_t, BUFFSIZE&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1395.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="5601.5" y="1400.6245">_remoteEndpoint : boost::asio::ip::udp::endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1408.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="5601.5" y="1413.4292">_t : boost::asio::steady_timer</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1420.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="5601.5" y="1426.2339">_parser : std::map&lt;Client::clientState, parsingFunction&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1433.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="5601.5" y="1439.0386">_buffer : std::shared_ptr&lt;Buffer&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1446.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="5601.5" y="1451.8433">_socket : std::shared_ptr&lt;boost::asio::ip::udp::socket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1459.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="5601.5" y="1464.6479">_libPath : std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1472.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="5601.5" y="1477.4526">_lobbies : std::vector&lt;Lobby&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1484.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="5601.5" y="1490.2573">_clients : std::vector&lt;clientPtr&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5582.5" x2="6517.5" y1="1496.8516" y2="1496.8516"/><ellipse cx="5592.5" cy="1508.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="5601.5" y="1511.062">udpServer(boost::asio::io_context &amp;, const std::string&amp; libPath)</text><ellipse cx="5592.5" cy="1521.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="5601.5" y="1523.8667">udpServer(const udpServer&amp; other)</text><ellipse cx="5592.5" cy="1534.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="5601.5" y="1536.6714">~udpServer()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1544.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="5601.5" y="1549.4761">findLobby(const std::string&amp; name) : Lobby&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1556.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="5601.5" y="1562.2808">findLobby(const clientPtr&amp; client) : Lobby&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1569.7773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="5601.5" y="1575.0854">doesClientExist() : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1582.582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="5601.5" y="1587.8901">doesLobbyExist(const std::string&amp; name) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1595.3867"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="5601.5" y="1600.6948">isLobbyNameAvailable(const std::string&amp; name) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1608.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="5601.5" y="1613.4995">findClient(const unsigned short) : clientPtr&amp;</text><ellipse cx="5592.5" cy="1623.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="5601.5" y="1626.3042">operator=(const udpServer&amp; other) : udpServer&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1633.8008"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="5601.5" y="1639.1089">acceptConnection() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1646.6055"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="5601.5" y="1651.9136">handleReceive(const boost::system::error_code&amp; error, std::size_t) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1659.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="493" x="5601.5" y="1664.7183">handleSend(const std::string &amp;, const boost::system::error_code &amp;, std::size_t) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1672.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="5601.5" y="1677.5229">parseData() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1685.0195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="5601.5" y="1690.3276">parserInGameState(clientPtr&amp; clt, std::string &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1697.8242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="5601.5" y="1703.1323">parserInLobbyState(clientPtr&amp; clt, std::string &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1710.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="5601.5" y="1715.937">parserNoneState(clientPtr &amp;, std::string &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1723.4336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="5601.5" y="1728.7417">parserReadyState(clientPtr&amp; clt, std::string &amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1736.2383"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="5601.5" y="1741.5464">removeClient(const boost::uuids::uuid&amp; uuid) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1749.043"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="911" x="5601.5" y="1754.3511">routineMenu(std::vector&lt;clientPtr&gt;&amp; clients, std::vector&lt;std::shared_ptr&lt;ECS::playerNumber&gt;&gt;&amp; players, std::queue&lt;ECS::playerNumber&gt;&amp; available) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1761.8477"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="5601.5" y="1767.1558">send(const std::string&amp; toSend) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1774.6523"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="5601.5" y="1779.9604">serverEndHandler(const boost::system::error_code &amp;) : void</text><ellipse cx="5592.5" cy="1790.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5601.5" y="1792.7651">start() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5589.5" y="1800.2617"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="5601.5" y="1805.5698">startReceive() : void</text><ellipse cx="5592.5" cy="1816.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="5601.5" y="1818.3745">stop() : void</text><!--class ufo--><rect fill="#FEFECE" filter="url(#f1g9x9js5r1vd6)" height="124.8281" id="ufo" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="1470.5" y="2473"/><ellipse cx="1604.75" cy="2489" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1607.7188,2494.6406 Q1607.1406,2494.9375 1606.5,2495.0781 Q1605.8594,2495.2344 1605.1563,2495.2344 Q1602.6563,2495.2344 1601.3281,2493.5938 Q1600.0156,2491.9375 1600.0156,2488.8125 Q1600.0156,2485.6875 1601.3281,2484.0313 Q1602.6563,2482.375 1605.1563,2482.375 Q1605.8594,2482.375 1606.5,2482.5313 Q1607.1563,2482.6875 1607.7188,2482.9844 L1607.7188,2485.7031 Q1607.0938,2485.125 1606.5,2484.8594 Q1605.9063,2484.5781 1605.2813,2484.5781 Q1603.9375,2484.5781 1603.25,2485.6563 Q1602.5625,2486.7188 1602.5625,2488.8125 Q1602.5625,2490.9063 1603.25,2491.9844 Q1603.9375,2493.0469 1605.2813,2493.0469 Q1605.9063,2493.0469 1606.5,2492.7813 Q1607.0938,2492.5 1607.7188,2491.9219 L1607.7188,2494.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="20" x="1625.25" y="2493.1543">ufo</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1471.5" x2="1766.5" y1="2505" y2="2505"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1471.5" x2="1766.5" y1="2513" y2="2513"/><ellipse cx="1481.5" cy="2524.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1490.5" y="2527.2104">ufo()</text><ellipse cx="1481.5" cy="2537.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1490.5" y="2540.0151">ufo(const ufo&amp; other)</text><ellipse cx="1481.5" cy="2550.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1490.5" y="2552.8198">~ufo()</text><ellipse cx="1481.5" cy="2563.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1490.5" y="2565.6245">operator=(const ufo&amp; other) : ufo&amp;</text><ellipse cx="1481.5" cy="2576.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1490.5" y="2578.4292">init(ECS::ECSEngine &amp;) : void</text><ellipse cx="1481.5" cy="2588.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1490.5" y="2591.2339">update(const float dt, ECS::ECSEngine &amp;) : void</text><!--link AMonster to pirate--><path d="M1148.9694,2422.7653 C1118.6989,2439.3334 1086.7645,2456.8123 1057.3135,2472.9319 " fill="none" id="AMonster-pirate" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1145.6637,2416.5947,1166.5686,2413.1326,1152.3855,2428.8755,1145.6637,2416.5947" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AMonster to spaceship--><path d="M1281,2433.5531 C1281,2446.7849 1281,2460.2773 1281,2472.9319 " fill="none" id="AMonster-spaceship" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1274.0001,2433.1326,1281,2413.1326,1288.0001,2433.1325,1274.0001,2433.1326" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AMonster to ufo--><path d="M1413.0306,2422.7653 C1443.3011,2439.3334 1475.2355,2456.8123 1504.6865,2472.9319 " fill="none" id="AMonster-ufo" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1409.6145,2428.8755,1395.4314,2413.1326,1416.3363,2416.5947,1409.6145,2428.8755" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.bombSystem--><path d="M3328.7923,1204.756 C3302.3815,1225.0909 3271.1674,1244.8739 3239,1256 C2871.6783,1383.0498 1856.7847,1184.5908 1491,1316 C1384.9193,1354.1098 1285.5838,1439.8228 1223.9389,1501.2475 " fill="none" id="ECS.ASystem-ECS.bombSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3324.5991,1199.1458,3344.5816,1192.0958,3333.357,1210.0683,3324.5991,1199.1458" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.collisionSystem--><path d="M3327.9013,1204.6881 C3301.6222,1224.8004 3270.713,1244.4669 3239,1256 C2858.5014,1394.376 2716.1504,1194.2832 2330,1316 C2224.9004,1349.128 2118.866,1413.6782 2039.6313,1469.477 " fill="none" id="ECS.ASystem-ECS.collisionSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3323.6212,1199.1481,3343.6312,1192.1764,3332.3363,1210.1048,3323.6212,1199.1481" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.eventSystem--><path d="M3570.1079,1142.3868 C3784.3218,1155.4408 4163.8853,1195.1624 4464,1316 C4567.4529,1357.6541 4671.2094,1431.4023 4743.1025,1488.8241 " fill="none" id="ECS.ASystem-ECS.eventSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3569.459,1149.3609,3549.9019,1141.2049,3570.2766,1135.3848,3569.459,1149.3609" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.monsterSystem--><path d="M3326.1266,1204.7507 C3300.1316,1224.4371 3269.8378,1243.8373 3239,1256 C3031.2032,1337.9572 2935.3638,1207.6972 2740,1316 C2666.1893,1356.9181 2608.9417,1436.2103 2573.9293,1495.4668 " fill="none" id="ECS.ASystem-ECS.monsterSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3322.0813,1199.0271,3342.1354,1192.1836,3330.7261,1210.0393,3322.0813,1199.0271" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.movementSystem--><path d="M3568.7828,1183.2873 C3662.619,1213.8548 3780.0327,1258.661 3876,1316 C3959.3072,1365.7747 4041.7572,1439.8961 4098.0452,1495.3273 " fill="none" id="ECS.ASystem-ECS.movementSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3566.6417,1189.9519,3549.7391,1177.1729,3570.9216,1176.6221,3566.6417,1189.9519" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.routineSystem--><path d="M3386.3877,1211.9796 C3370.3525,1285.3195 3346.0255,1396.5833 3328.7297,1475.6888 " fill="none" id="ECS.ASystem-ECS.routineSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3379.5673,1210.4011,3390.6778,1192.3578,3393.2443,1213.3915,3379.5673,1210.4011" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.winSystem--><path d="M3569.6681,1144.6166 C3990.4514,1167.4895 5072.2536,1233.656 5212,1316 C5285.8215,1359.4985 5335.9754,1447.5875 5363.2973,1507.8175 " fill="none" id="ECS.ASystem-ECS.winSystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3569.1261,1151.5977,3549.5333,1143.5278,3569.8821,1137.6181,3569.1261,1151.5977" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Bomb--><path d="M1170.2971,471.4986 C1112.3738,520.2304 1018.3003,599.3761 954.8357,652.77 " fill="none" id="ECS.IComponents-ECS.Bomb" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1165.8097,466.1261,1185.6203,458.6068,1174.8226,476.839,1165.8097,466.1261" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Dimensions--><path d="M1222,478.8395 C1222,523.8353 1222,589.9037 1222,639.7259 " fill="none" id="ECS.IComponents-ECS.Dimensions" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1215.0001,478.6069,1222,458.6068,1229.0001,478.6068,1215.0001,478.6069" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Life--><path d="M1272.1721,471.9201 C1325.73,518.8042 1411.0474,593.4901 1471.5985,646.4959 " fill="none" id="ECS.IComponents-ECS.Life" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1267.4016,477.0473,1256.9637,458.6068,1276.6231,466.5133,1267.4016,477.0473" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Player--><path d="M1299.6691,460.2855 C1400.959,502.3898 1581.2791,577.3453 1717.5671,633.9976 " fill="none" id="ECS.IComponents-ECS.Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1296.8838,466.7085,1281.1027,452.5678,1302.2576,453.7809,1296.8838,466.7085" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Position--><path d="M1301.2813,437.1156 C1460.4086,457.1196 1828.3354,512.0199 2119,621 C2133.3278,626.372 2147.9336,632.867 2162.1978,639.8668 " fill="none" id="ECS.IComponents-ECS.Position" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1300.1289,444.0266,1281.1365,434.6305,1301.8431,430.132,1300.1289,444.0266" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.Velocity--><path d="M1142.7254,436.824 C982.7604,456.3735 611.6612,510.6008 319,621 C304.8207,626.3488 290.3789,632.8294 276.283,639.8211 " fill="none" id="ECS.IComponents-ECS.Velocity" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1142.2779,429.8276,1162.9686,434.3986,1143.9434,443.7282,1142.2779,429.8276" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IComponents to ECS.entityDetails--><path d="M1144.0069,458.9183 C1048.7554,496.7651 882.7972,562.9861 741,621 C730.7143,625.2082 720.1545,629.5486 709.5034,633.9419 " fill="none" id="ECS.IComponents-ECS.entityDetails" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1141.4842,452.3884,1162.6558,451.5121,1146.6517,465.3999,1141.4842,452.3884" style="stroke: #A80036; stroke-width: 1.0;"/><!--link IMonster to AMonster--><path d="M1675.2648,2110.0148 C1593.1616,2160.0944 1470.4953,2234.9157 1383.8295,2287.7783 " fill="none" id="IMonster-AMonster" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1671.6773,2104.0037,1692.3969,2099.565,1678.9676,2115.9557,1671.6773,2104.0037" style="stroke: #A80036; stroke-width: 1.0;"/><!--link INetwork to udpServer--><path d="M6050,1218.9407 C6050,1247.3725 6050,1280.8548 6050,1315.6649 " fill="none" id="INetwork-udpServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6043.0001,1218.716,6050,1198.716,6057.0001,1218.716,6043.0001,1218.716" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.IStorage to ECS.Storage--><path d="M3052.8051,975.8133 C3050.1978,988.5449 3047.4082,1002.1665 3044.5976,1015.8906 " fill="none" id="ECS.IStorage-ECS.Storage" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3045.9892,974.2044,3056.8596,956.0155,3059.7046,977.0133,3045.9892,974.2044" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ISystem to ECS.ASystem--><path d="M3481.7547,962.2097 C3465.6155,997.8244 3444.7506,1043.8676 3428.5521,1079.6135 " fill="none" id="ECS.ISystem-ECS.ASystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3475.5439,958.9557,3490.175,943.6282,3488.2957,964.7344,3475.5439,958.9557" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AMonster to ECS.Filter--><path d="M1201.9691,2279.1527 C1034.2212,2127.7135 644.9594,1776.2967 486.2442,1633.0122 " fill="none" id="AMonster-ECS.Filter" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1211.7266,2287.9616,1209.9534,2280.9719,1202.8194,2279.9204,1204.5926,2286.9101,1211.7266,2287.9616" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ASystem to ECS.Filter--><path d="M3334.3842,1200.6073 C3306.8602,1222.4415 3273.499,1244.2489 3239,1256 C2985.55,1342.3307 1086.6778,1239.8003 830,1316 C699.6063,1354.7099 569.3656,1445.8656 490.9794,1507.8893 " fill="none" id="ECS.ASystem-ECS.Filter" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3344.6375,1192.2587,3337.4592,1192.9453,3335.3321,1199.8356,3342.5104,1199.1489,3344.6375,1192.2587" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ECSEngine to ECS.EntityManager--><path d="M3078.6791,525.4676 C2996.6326,554.8648 2907.32,588.0972 2826,621 C2819.9747,623.4379 2813.8619,625.9537 2807.7018,628.5254 " fill="none" id="ECS.ECSEngine-ECS.EntityManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3090.9922,521.065,3083.9958,519.3186,3079.6928,525.1052,3086.6892,526.8516,3090.9922,521.065" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ECSEngine to ECS.StorageManager--><path d="M3236.7166,571.0872 C3221.7345,588.0629 3206.7969,604.9882 3192.779,620.8714 " fill="none" id="ECS.ECSEngine-ECS.StorageManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3245.5364,561.0939,3238.5671,562.9456,3237.5958,570.091,3244.5651,568.2393,3245.5364,561.0939" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.ECSEngine to ECS.SystemManager--><path d="M3489.2041,570.9973 C3510.3541,594.9617 3531.4185,618.8291 3549.9353,639.8097 " fill="none" id="ECS.ECSEngine-ECS.SystemManager" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3480.4636,561.0939,3481.4349,568.2393,3488.4042,570.091,3487.4329,562.9456,3480.4636,561.0939" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.StorageManager to ECS.IStorage--><path d="M3090.4368,810.0672 C3086.4916,826.3001 3082.5667,842.4495 3079.0888,856.7595 " fill="none" id="ECS.StorageManager-ECS.IStorage" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3093.597,797.0643,3088.2932,801.9499,3090.763,808.7249,3096.0669,803.8392,3093.597,797.0643" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.SystemManager to ECS.ISystem--><path d="M3568.473,789.7604 C3553.9381,817.3628 3538.3812,846.9059 3526.554,869.3663 " fill="none" id="ECS.SystemManager-ECS.ISystem" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3574.6258,778.0759,3568.2909,781.5211,3569.0346,788.6937,3575.3695,785.2486,3574.6258,778.0759" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.eventSystem to Buffer--><path d="M4939.7018,1660.6121 C5010.8051,1718.0763 5110.8099,1788.3987 5212,1825 C5471.9199,1919.0152 5574.367,1782.3513 5831,1885 C5885.0298,1906.611 5936.7176,1945.875 5976.2972,1981.3853 " fill="none" id="ECS.eventSystem-Buffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4929.4242,1652.2326,4931.5469,1659.1242,4938.7248,1659.8154,4936.6021,1652.9238,4929.4242,1652.2326" style="stroke: #A80036; stroke-width: 1.0;"/><!--link gameLoop to Buffer--><path d="M5661.1616,238.1126 C6078.4315,340.4058 6572,504.6034 6572,709 C6572,709 6572,709 6572,1136 C6572,1442.6399 6733.6774,1590.5822 6536,1825 C6457.8725,1917.6483 6379.5457,1833.1605 6270,1885 C6218.6744,1909.2885 6168.2142,1947.3041 6128.5933,1981.3775 " fill="none" id="gameLoop-Buffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5648.5286,235.0288,5653.4088,240.3376,5660.1863,237.8746,5655.306,232.5658,5648.5286,235.0288" style="stroke: #A80036; stroke-width: 1.0;"/><!--link gameLoop to ECS.ECSEngine--><path d="M4481.3393,229.6372 C4192.2688,280.9104 3861.4974,339.5802 3635.1145,379.7343 " fill="none" id="gameLoop-ECS.ECSEngine" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4494.2033,227.3554,4487.5969,224.4648,4482.3877,229.4512,4488.9941,232.3418,4494.2033,227.3554" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.monsterSystem to DLLoader--><path d="M2535,1658.8738 C2535,1753.2322 2535,1900.8001 2535,1987.1394 " fill="none" id="ECS.monsterSystem-DLLoader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2535,1645.6382,2531,1651.6382,2535,1657.6382,2539,1651.6382,2535,1645.6382" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.monsterSystem to IMonster--><path d="M2482.0299,1656.716 C2445.0387,1711.0244 2391.4053,1779.2648 2330,1825 C2202.7302,1919.7918 2031.1367,1982.7413 1910.1605,2018.7575 " fill="none" id="ECS.monsterSystem-IMonster" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2489.4354,1645.7019,2482.7681,1648.4491,2482.7397,1655.6602,2489.407,1652.9129,2489.4354,1645.7019" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.routineSystem to Client--><path d="M3343.0468,1677.6242 C3370.8434,1762.5875 3409.3251,1880.2106 3436.0067,1961.7659 " fill="none" id="ECS.routineSystem-Client" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3338.9397,1665.0705,3337.0037,1672.0168,3342.671,1676.4756,3344.6071,1669.5293,3338.9397,1665.0705" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.routineSystem to BinaryProtocol.Codec--><path d="M3501.5034,1670.8809 C3609.3259,1723.2935 3747.4139,1784.7188 3876,1825 C4013.667,1868.1259 4064.2651,1824.0045 4195,1885 C4245.1917,1908.4174 4293.5178,1946.6843 4331.0342,1981.1361 " fill="none" id="ECS.routineSystem-BinaryProtocol.Codec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="3489.5072,1665.026,3493.1449,1671.2523,3500.2914,1670.2892,3496.6537,1664.0629,3489.5072,1665.026" style="stroke: #A80036; stroke-width: 1.0;"/><!--link udpServer to Buffer--><path d="M6050,1838.2758 C6050,1890.8598 6050,1941.88 6050,1981.3489 " fill="none" id="udpServer-Buffer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6050,1825.2425,6046,1831.2425,6050,1837.2425,6054,1831.2425,6050,1825.2425" style="stroke: #A80036; stroke-width: 1.0;"/><!--link udpServer to Client--><path d="M5568.7312,1823.4609 C5566.8199,1823.9823 5564.9095,1824.4954 5563,1825 C5196.4601,1921.8661 4227.6295,1800.6877 3858,1885 C3785.3702,1901.5668 3709.5061,1931.5573 3644.1408,1961.8785 " fill="none" id="udpServer-Client" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5581.356,1819.9006,5574.4956,1817.6793,5569.8065,1823.1576,5576.6669,1825.379,5581.356,1819.9006" style="stroke: #A80036; stroke-width: 1.0;"/><!--link udpServer to BinaryProtocol.Codec--><path d="M5568.6843,1823.2935 C5566.7884,1823.8698 5564.8936,1824.4387 5563,1825 C5292.9073,1905.0634 5207.8433,1827.8101 4932,1885 C4818.2794,1908.5774 4694.6316,1947.9567 4595.5983,1983.038 " fill="none" id="udpServer-BinaryProtocol.Codec" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5581.2113,1819.3842,5574.2921,1817.3533,5569.7562,1822.9591,5576.6754,1824.99,5581.2113,1819.3842" style="stroke: #A80036; stroke-width: 1.0;"/><!--link udpServer to Lobby--><path d="M5688.5978,1833.0433 C5664.434,1850.5973 5640.4587,1868.0143 5617.1806,1884.9249 " fill="none" id="udpServer-Lobby" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5699.3359,1825.2425,5692.1306,1825.5328,5689.6273,1832.2954,5696.8326,1832.0051,5699.3359,1825.2425" style="stroke: #A80036; stroke-width: 1.0;"/><!--link udpServer to SignalHandler--><path d="M6251.4199,1835.7847 C6301.218,1901.3725 6349.3582,1964.7766 6381.1647,2006.6682 " fill="none" id="udpServer-SignalHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="6243.4156,1825.2425,6243.8581,1832.44,6250.6721,1834.7998,6250.2296,1827.6023,6243.4156,1825.2425" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ECS.componentType to ECS.currentMovement--><!--link ECS.componentType to ECS.playerNumber--><!--
@startuml






abstract class AMonster {
	+AMonster()
	+AMonster(const AMonster& other)
	+~AMonster()
	+operator=(const AMonster& other) : AMonster&
	#_filter : ECS::Filter
	+{abstract} update(const float dt, ECS::ECSEngine &) : void
}


namespace ECS {
	class ASystem {
		+ASystem()
		+ASystem(const ASystem& other)
		+~ASystem()
		+operator=(const ASystem& other) : ASystem&
		#_filter : Filter
	}
}


class Buffer {
	+Buffer()
	+Buffer(const Buffer& other)
	+~Buffer()
	+operator=(const Buffer& other) : Buffer&
	+isDataAvailable(boost::uuids::uuid& uuid) : bool {query}
	-_sBuffer : std::map<boost::uuids::uuid, std::vector<std::string>>
	+getData(boost::uuids::uuid& uuid) : std::vector<std::string>&
	+addData(boost::uuids::uuid& uuid, const std::string& data) : void
}


class Client {
	+Client(const boost::asio::ip::address& adr, const unsigned short port)
	+Client(const Client& other)
	+~Client()
	+operator=(const Client& other) : Client&
	-_endpoint : boost::asio::ip::udp::endpoint
	+getEndpoint() : boost::asio::ip::udp::endpoint&
	-_uuid : boost::uuids::uuid
	+getUuid() : boost::uuids::uuid&
	-_state : clientState
	+getState() : int {query}
	+setState(clientState state) : void
}


namespace BinaryProtocol {
	class Codec {
		+Codec()
		+Codec(const Codec& other)
		+~Codec()
		+operator=(const Codec& other) : Codec&
		+createPacket(const std::string& message) : Packet
		+unserialize(const boost::array<uint8_t, 1024>& input) : Packet
		+check_packet(const Packet& toCheck) : bool
		+serialize(const Packet& input) : std::vector<uint8_t>
	}
}


class DLLoader {
	+DLLoader(const std::string& libpath)
	+DLLoader(const DLLoader& other)
	+catch(ErrorDLLoader const& err)
	+~DLLoader()
	+operator=(const DLLoader& other) : DLLoader&
	+getInstance(const std::string& name) : std::unique_ptr<T> {query}
	-_handler : void*
}


namespace ECS {
	class ECSEngine {
		+ECSEngine()
		+ECSEngine(const ECSEngine& other)
		+~ECSEngine()
		+operator=(const ECSEngine& other) : ECSEngine&
		+getNewEntity() : Entity {query}
		+getComponent(const Entity entity, const componentType type) : T&
		+getStorage(const componentType type) : std::shared_ptr<IStorage>&
		-_entityM : std::unique_ptr<EntityManager>
		-_storageM : std::unique_ptr<StorageManager>
		-_systemM : std::unique_ptr<SystemManager>
		+getEntites() : std::vector<Entity>&
		+getSystems() : std::vector<std::shared_ptr<ISystem>>&
		+addComponent(const Entity entity, const T& component, const componentType type) : void
		+registerComponent(const componentType type) : void
		+registerSystem(Args&& ... args) : void
		+removeEntity(const Entity entity) : void
		+update(float dt) : void
	}
}


namespace ECS {
	class EntityManager {
		+EntityManager()
		+EntityManager(const EntityManager& other)
		+~EntityManager()
		+createEntity() : Entity
		+operator=(const EntityManager& other) : EntityManager&
		-_entities : std::queue<Entity>
		-_ids : std::vector<Entity>
		+getEntities() : std::vector<Entity>&
		-_nbEntities : unsigned int
		+destroyEntity(const Entity entity) : void
	}
}


namespace ECS {
	class Filter {
		+Filter()
		+Filter(const Filter& other)
		+~Filter()
		+operator=(const Filter& other) : Filter&
		+findComponent(const componentType& type, std::unordered_map<componentType, std::shared_ptr<IStorage>>& components) : T&
		+filterEntities(const std::shared_ptr<IStorage>& storage, std::vector<Entity>& entities) : std::vector<Entity>
	}
}


namespace ECS {
	class IComponents {
		+~IComponents()
	}
}


abstract class IMonster {
	+~IMonster()
	+{abstract} init(ECS::ECSEngine &) : void
	+{abstract} update(const float dt, ECS::ECSEngine &) : void
}


abstract class INetwork {
	+~INetwork()
	-{abstract} handleReceive(const boost::system::error_code &, std::size_t) : void
	-{abstract} send(const std::string &) : void
	+{abstract} start() : void
	-{abstract} startReceive() : void
	+{abstract} stop() : void
}


namespace ECS {
	abstract class IStorage {
		+~IStorage()
		+{abstract} destroyEntity(std::size_t entityID) : bool
		+{abstract} hasComponent(std::size_t entityID) : bool
		+{abstract} getType() : componentType {query}
	}
}


namespace ECS {
	abstract class ISystem {
		+~ISystem()
		+{abstract} update(const float dt, ECSEngine& engine) : void
	}
}


class Lobby {
	+Lobby(const std::string& name)
	+Lobby(const Lobby& other)
	+~Lobby()
	+getPlayerNumber(shared_ptr<Client> client) : ECS::playerNumber
	+operator=(const Lobby& other) : Lobby&
	+hasClient(shared_ptr<Client> client) : bool
	+isReadyToGo() : bool
	+isRoomFull() : bool
	+getState() : int {query}
	-_state : lobbyState
	-_available : std::queue<ECS::playerNumber>
	+getQueuePlayers() : std::queue<ECS::playerNumber>&
	-_name : std::string
	+getName() : std::string {query}
	-_clients : std::vector<clientPtr>
	+getClients() : std::vector<clientPtr>&
	-_players : std::vector<std::shared_ptr<ECS::playerNumber>>
	+getPlayers() : std::vector<std::shared_ptr<ECS::playerNumber>>&
	+addClient(shared_ptr<Client> client) : void
	-handleSend(const std::string& message, const boost::system::error_code& error, std::size_t bytesTransferred) : void
	+loadingLobby() : void
	+removeClient(shared_ptr<Client> client) : void
	+startGame(const std::shared_ptr<boost::asio::ip::udp::socket>& socket, const std::shared_ptr<Buffer>& buffer, const std::string& libPath) : void
}


class SignalHandler {
	+SignalHandler()
	+~SignalHandler()
	+isInterrupted() : bool
	-{static} signal_callback_handler(int signum) : void
}


namespace ECS {
	class Storage <template<typename T>> {
		+Storage(const componentType& type)
		+Storage(const Storage& other)
		+~Storage()
		+operator=(const Storage& other) : Storage&
		+getComponent(Entity entityID) : T&
		+destroyEntity(Entity entityID) : bool
		+hasComponent(Entity entityID) : bool
		-_type : componentType
		+getType() : componentType {query}
		-_size : size_t
		-_componentArray : std::array<T, 5000>
		-_entityToIndex : std::unordered_map<Entity, size_t>
		-_indexToEntity : std::unordered_map<size_t, Entity>
		+linkEntityToComponent(Entity entityID, const T& component) : void
		-removeEntity(size_t entityID) : void
	}
}


namespace ECS {
	class StorageManager {
		+StorageManager()
		+StorageManager(const StorageManager& other)
		+~StorageManager()
		+operator=(const StorageManager& other) : StorageManager&
		+findStorage(const componentType& type) : T&
		+getStorage(const componentType type) : std::shared_ptr<IStorage>&
		+getStorages() : std::unordered_map<componentType , std::shared_ptr<IStorage>>&
		-_storages : std::unordered_map<componentType, std::shared_ptr<IStorage>>
		+addComponent(const Entity entity, const T& component, const componentType type) : void
		+registerStorage(const componentType type) : void
	}
}


namespace ECS {
	class SystemManager {
		+SystemManager()
		+SystemManager(const SystemManager& other)
		+~SystemManager()
		+operator=(const SystemManager& other) : SystemManager&
		-_systems : std::vector<std::shared_ptr<ISystem>>
		+getSystems() : std::vector<std::shared_ptr<ISystem>>&
		+addSystem(const std::shared_ptr<ISystem>& system) : void
	}
}


class Zipper {
	+Zipper()
	+Zipper(const Zipper& other)
	+~Zipper()
	+operator=(const Zipper& other) : Zipper&
	+{static} zip(T&& ... containers ) ->boost::iterator_range<boost::zip_iterator<decltype ( boost::make_tuple ( std::begin ( containers ) ... )) : auto
}


namespace ECS {
	class bombSystem {
		+bombSystem()
		+bombSystem(const bombSystem& other)
		+~bombSystem()
		+operator=(const bombSystem& other) : bombSystem&
		+update(const float dt, ECSEngine& engine) : void
		-updateBomb(const float dt, const Entity ent, ECS::ECSEngine& engine, ECS::entityDetails& details) : void
		-updateShoot(const float dt, const Entity ent, ECS::ECSEngine& engine, ECS::entityDetails& details) : void
	}
}


namespace ECS {
	class collisionSystem {
		+collisionSystem()
		+collisionSystem(const collisionSystem& other)
		+~collisionSystem()
		-findIntersection(Position playerPos, Position playerMaxpos, Position entPos, Position entMaxPos) : Position {query}
		-isExplodable(const entityType type) : bool
		-isPossibleCollision(const entityType type, std::vector<entityType>& types) : bool
		+operator=(const collisionSystem& other) : collisionSystem&
		-checkCollision(const Entity ent, std::vector<Entity>& entities, ECS::ECSEngine& engine, std::vector<entityType>& CollisionTypes) : void
		-createBomb(Position pos, ECS::ECSEngine& engine) : void
		-destroyEntity(const Entity ent, const Entity obstacle, ECS::ECSEngine& engine) : void
		-looseHp(const Entity ent, const Entity obstacle, ECS::ECSEngine& engine) : void
		+update(const float dt, ECSEngine& engine) : void
	}
}


class dirReader {
	+dirReader(const std::string& name)
	+dirReader(const dirReader& other)
	+~dirReader()
	+operator=(const dirReader& other) : dirReader&
	-_path : std::string
	+findLibraries() : std::vector<std::string>
	-pushLibPath(const std::string& name, std::vector<std::string>& libPaths) : void
}


namespace ECS {
	class eventSystem {
		+eventSystem(const std::shared_ptr<Buffer>& buffer)
		+eventSystem(const eventSystem& other)
		+~eventSystem()
		+operator=(const eventSystem& other) : eventSystem&
		-_moves : std::map<std::string, ECS::currentMovement>
		-_buffer : std::shared_ptr<Buffer>
		-createShoot(ECS::ECSEngine& engine, const Entity entity) : void
		-handleEvent(std::vector<std::string>& events, ECS::ECSEngine& engine, const Entity entity, ECS::Player& player) : void
		+update(const float dt, ECSEngine& engine) : void
	}
}


class gameLoop {
	+gameLoop()
	+gameLoop(const gameLoop &)
	+~gameLoop()
	-_engine : ECS::ECSEngine
	+operator=(const gameLoop &) : gameLoop&
	-_buffer : std::shared_ptr<Buffer>
	-_end : std::shared_ptr<bool>
	-createPlayers(std::vector<clientPtr> &, std::vector<std::shared_ptr<ECS::playerNumber>> &) : void
	-handleSend(const std::string &, const boost::system::error_code &, std::size_t) : void
	+prepareGame(std::vector<clientPtr> &, std::vector<std::shared_ptr<ECS::playerNumber>> &, shared_ptr<boost::asio::ip::udp::socket> &, const std::shared_ptr<Buffer> &, const std::string &) : void
	-registerComponents() : void
	-registerSystems(std::vector<clientPtr> &, std::vector<std::shared_ptr<ECS::playerNumber>> &, shared_ptr<boost::asio::ip::udp::socket> &, const std::shared_ptr<Buffer> &, const std::string &) : void
	+run(std::vector<clientPtr> &, std::vector<std::shared_ptr<ECS::playerNumber>> &, Lobby::lobbyState &) : void
	-update(const float) : void
}


namespace ECS {
	class monsterSystem {
		+monsterSystem(const std::string& libPath)
		+monsterSystem(const monsterSystem& other)
		+~monsterSystem()
		+operator=(const monsterSystem& other) : monsterSystem&
		-selectRandomMonster() : std::unique_ptr<DLLoader>&
		-_loaders : std::vector<std::unique_ptr<DLLoader>>
		-_monsters : std::vector<std::unique_ptr<IMonster>>
		+update(const float dt, ECSEngine& engine) : void
	}
}


namespace ECS {
	class movementSystem {
		+movementSystem()
		+movementSystem(const movementSystem& other)
		+~movementSystem()
		+operator=(const movementSystem& other) : movementSystem&
		-applyPhysic(Position& pos, const Velocity& vel, const float dt) : void
		-applyPhysic(Position& pos, const Velocity& vel, entityDetails& details, Player& player) : void
		-manageAnimation(ECS::entityDetails& details, const ECS::currentMovement move) : void
		+update(const float dt, ECSEngine& engine) : void
	}
}


class pirate {
	+pirate()
	+pirate(const pirate& other)
	+~pirate()
	+operator=(const pirate& other) : pirate&
	+init(ECS::ECSEngine &) : void
	+update(const float dt, ECS::ECSEngine &) : void
}


namespace ECS {
	class routineSystem {
		+routineSystem(const std::shared_ptr<boost::asio::ip::udp::socket>& socket, std::vector<std::shared_ptr<Client>>& clients, std::vector<std::shared_ptr<ECS::playerNumber>>& players)
		+routineSystem(const routineSystem& other)
		+~routineSystem()
		-_binCodec : BinaryProtocol::Codec
		+operator=(const routineSystem& other) : routineSystem&
		-_socket : std::shared_ptr<boost::asio::ip::udp::socket>
		-_clients : std::vector<std::shared_ptr<Client>>
		-_players : std::vector<std::shared_ptr<ECS::playerNumber>>
		-handleSend(const std::string& message, const boost::system::error_code& error, std::size_t bytesTransferred) : void
		-sendUpdates(const Entity ent, const entityDetails& details, const Position& position, ECS::ECSEngine& engine) : void
		+update(const float dt, ECSEngine& engine) : void
	}
}


class spaceship {
	+spaceship()
	+spaceship(const spaceship& other)
	+~spaceship()
	+operator=(const spaceship& other) : spaceship&
	+init(ECS::ECSEngine &) : void
	+update(const float dt, ECS::ECSEngine &) : void
}


class udpServer {
	+udpServer(boost::asio::io_context &, const std::string& libPath)
	+udpServer(const udpServer& other)
	+~udpServer()
	-_binCodec : BinaryProtocol::Codec
	-findLobby(const std::string& name) : Lobby&
	-findLobby(const clientPtr& client) : Lobby&
	-_sigHandler : SignalHandler
	-doesClientExist() : bool
	-doesLobbyExist(const std::string& name) : bool
	-isLobbyNameAvailable(const std::string& name) : bool
	-_data : boost::array<uint8_t, BUFFSIZE>
	-_remoteEndpoint : boost::asio::ip::udp::endpoint
	-_t : boost::asio::steady_timer
	-findClient(const unsigned short) : clientPtr&
	-_parser : std::map<Client::clientState, parsingFunction>
	-_buffer : std::shared_ptr<Buffer>
	-_socket : std::shared_ptr<boost::asio::ip::udp::socket>
	-_libPath : std::string
	-_lobbies : std::vector<Lobby>
	-_clients : std::vector<clientPtr>
	+operator=(const udpServer& other) : udpServer&
	-acceptConnection() : void
	-handleReceive(const boost::system::error_code& error, std::size_t) : void
	-handleSend(const std::string &, const boost::system::error_code &, std::size_t) : void
	-parseData() : void
	-parserInGameState(clientPtr& clt, std::string &) : void
	-parserInLobbyState(clientPtr& clt, std::string &) : void
	-parserNoneState(clientPtr &, std::string &) : void
	-parserReadyState(clientPtr& clt, std::string &) : void
	-removeClient(const boost::uuids::uuid& uuid) : void
	-routineMenu(std::vector<clientPtr>& clients, std::vector<std::shared_ptr<ECS::playerNumber>>& players, std::queue<ECS::playerNumber>& available) : void
	-send(const std::string& toSend) : void
	-serverEndHandler(const boost::system::error_code &) : void
	+start() : void
	-startReceive() : void
	+stop() : void
}


class ufo {
	+ufo()
	+ufo(const ufo& other)
	+~ufo()
	+operator=(const ufo& other) : ufo&
	+init(ECS::ECSEngine &) : void
	+update(const float dt, ECS::ECSEngine &) : void
}


namespace ECS {
	class winSystem {
		+winSystem(const std::shared_ptr<bool>& end)
		+winSystem(const winSystem& other)
		+~winSystem()
		-_end : std::shared_ptr<bool>
		+update(const float dt, ECSEngine& engine) : void
		+operator=(const winSystem& other) : winSystem&
	}
}


namespace ECS {
	enum componentType {
		BOMB
		DIMENSIONS
		ENTITY_DETAILS
		LIFE
		PLAYER
		POSITION
		VELOCITY
	}
}


namespace ECS {
	enum currentMovement {
		DOWN
		LEFT
		NONE
		RIGHT
		UP
	}
}


namespace ECS {
	enum playerNumber {
		P1
		P2
		P3
		P4
		SPEC
	}
}


namespace ECS {
	class Bomb {
		+Bomb()
		+Bomb(const Bomb& other)
		+~Bomb()
		+operator=(const Bomb& other) : Bomb&
		+_dt : float
	}
}


namespace ECS {
	class Dimensions {
		+Dimensions()
		+Dimensions(const unsigned int x, const unsigned int y)
		+Dimensions(const Dimensions& other)
		+~Dimensions()
		+operator=(const Dimensions& other) : Dimensions&
		+_x : unsigned int
		+_y : unsigned int
	}
}


namespace ECS {
	class Life {
		+Life()
		+Life(const unsigned int hp)
		+Life(const Life& other)
		+~Life()
		+operator=(const Life& other) : Life&
		+_hp : unsigned int
	}
}


namespace BinaryProtocol {
	class Packet {
		+operator==(const Packet& other) : bool {query}
		+_message : std::string
		+_magicNumber : uint32_t
	}
}


namespace ECS {
	class Player {
		+Player()
		+Player(const playerNumber player, const boost::uuids::uuid& uuid)
		+Player(const Player& other)
		+~Player()
		+operator=(const Player& other) : Player&
		+_uuid : boost::uuids::uuid
		+_direction : currentMovement
		+_player : playerNumber
	}
}


namespace ECS {
	class Position {
		+Position()
		+Position(const int x, const int y)
		+Position(const Position& other)
		+~Position()
		+operator=(const Position& other) : Position&
		+_x : int
		+_y : int
	}
}


namespace ECS {
	class Velocity {
		+Velocity()
		+Velocity(const int x, const int y)
		+Velocity(const Velocity& other)
		+~Velocity()
		+operator=(const Velocity& other) : Velocity&
		+_vx : int
		+_vy : int
	}
}


namespace ECS {
	class entityDetails {
		+entityDetails()
		+entityDetails(const entityType type, const animationState state)
		+entityDetails(const entityDetails& other)
		+~entityDetails()
		+_state : animationState
		+_toUpdate : bool
		+operator=(const entityDetails& other) : entityDetails&
		+_type : entityType
	}
}






.AMonster <|- - .pirate


.AMonster <|- - .spaceship


.AMonster <|- - .ufo


namespace ECS {
	ASystem <|- - bombSystem
}


namespace ECS {
	ASystem <|- - collisionSystem
}


namespace ECS {
	ASystem <|- - eventSystem
}


namespace ECS {
	ASystem <|- - monsterSystem
}


namespace ECS {
	ASystem <|- - movementSystem
}


namespace ECS {
	ASystem <|- - routineSystem
}


namespace ECS {
	ASystem <|- - winSystem
}


namespace ECS {
	IComponents <|- - Bomb
}


namespace ECS {
	IComponents <|- - Dimensions
}


namespace ECS {
	IComponents <|- - Life
}


namespace ECS {
	IComponents <|- - Player
}


namespace ECS {
	IComponents <|- - Position
}


namespace ECS {
	IComponents <|- - Velocity
}


namespace ECS {
	IComponents <|- - entityDetails
}


.IMonster <|- - .AMonster


.INetwork <|- - .udpServer


namespace ECS {
	IStorage <|- - Storage
}


namespace ECS {
	ISystem <|- - ASystem
}






.AMonster *- - ECS.Filter


namespace ECS {
	ASystem *- - Filter
}


namespace ECS {
	ECSEngine *- - EntityManager
}


namespace ECS {
	ECSEngine *- - StorageManager
}


namespace ECS {
	ECSEngine *- - SystemManager
}


namespace ECS {
	StorageManager *- - IStorage
}


namespace ECS {
	SystemManager *- - ISystem
}


ECS.eventSystem *- - .Buffer


.gameLoop *- - .Buffer


.gameLoop *- - ECS.ECSEngine


ECS.monsterSystem *- - .DLLoader


ECS.monsterSystem *- - .IMonster


ECS.routineSystem *- - .Client


ECS.routineSystem *- - BinaryProtocol.Codec


.udpServer *- - .Buffer


.udpServer *- - .Client


.udpServer *- - BinaryProtocol.Codec


.udpServer *- - .Lobby


.udpServer *- - .SignalHandler





@enduml

PlantUML version 1.2019.01(Sat Feb 09 16:32:04 CET 2019)
(LGPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_252-b09
Operating System: Linux
OS Version: 5.6.13-100.fc30.x86_64
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>